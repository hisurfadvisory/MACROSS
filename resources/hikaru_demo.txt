d3JpdGUtaG9zdCAtZiBncmVlbiAnCiAgICBZb3UgaGF2ZSBjaG9zZW4gdGhlIHF1aWNrICYgZGlydHkuIE5vdGUgdGhhdCBNQUNST1NTIGlzIGludGVuZGVkIGZvciB1c2VycyB3aXRoCiAgICBhdCBsZWFzdCBtb2RlcmF0ZSBzY3JpcHRpbmcgc2tpbGxzLiBXaXRoIHRoYXQgaW4gbWluZCwgSGVyZSBhcmUgdGhlIGJhc2ljcyBmb3IgCiAgICBhZGRpbmcgeW91ciBhdXRvbWF0aW9ucyB0byBNQUNST1NTIQogICAgCiAgICAxLiBZb3VyIHNjcmlwdHMgZ28gaW4gdGhlICJcbW9kdWxlcyIgZm9sZGVyLCBhbmQgdGhleSBuZWVkIHRvIGJlZ2luIHdpdGggMyAKICAgIHNwZWNpZmljIGxpbmVzLCBvdGhlcndpc2UgTUFDUk9TUyBpZ25vcmVzIHRoZW06Jwp3cml0ZS1ob3N0IC1mIHllbGxvdyAnCiAgICAgICAgI19zZGYxIEZpcnN0IGxpbmUgaXMgYSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB5b3VyIHNjcmlwdAogICAgICAgICNfdmVyIDEuMAogICAgICAgICNfY2xhc3MgdXNlcixpb2MgZXh0cmFjdGlvbixweXRob24sSGlTdXJmQWR2aXNvcnksMSxsaXN0Jwp3cml0ZS1ob3N0IC1mIGdyZWVuICIKICAgIFRoZSBmaXJzdCBsaW5lIGlzIHdoYXQgZ2V0cyB3cml0dGVuIHRvIHRoZSBNQUNST1NTIG1lbnUuIFRoZSBzZWNvbmQgbGluZSBpcyB1c2VkCiAgICBmb3IgdmVyc2lvbmluZy9hdXRvLXVwZGF0ZXMgaWYgeW91IGhvc3QgbWFzdGVyIGNvcGllcyBvZiB0aGVzZSBzY3JpcHRzIHNvbWVwbGFjZS4KICAgIGFuZCB0aGUgdGhpcmQgbGluZSBpcyB1c2VkIHRvIGNsYXNzaWZ5IHlvdXIgc2NyaXB0IHdpdGggdGhlIGN1c3RvbSBbbWFjcm9zc10gY2xhc3MuCiAgICAKICAgIEluIG9yZGVyLCB0aGVzZSBbbWFjcm9zc10gY2xhc3MgYXR0cmlidXRlcyBhcmUKICAgICAgICAucHJpdiAodGhlIExPV0VTVCBsZXZlbCBvZiBwcml2aWxlZ2UgeW91ciBzY3JpcHQgbmVlZHMgdG8gcnVuOyB1c2VyIHZzLiBhZG1pbikKICAgICAgICAudmFsdHlwZSAodGhlIHR5cGUgb2YgZGF0YSB5b3UgcHJvY2Vzcywgb3IgdGhlIHRhc2sgeW91IHBlcmZvcm0pCiAgICAgICAgLmxhbmcgKHRoZSBsYW5ndWFnZSBvZiB0aGUgc2NyaXB0KQogICAgICAgIC5hdXRoICh0aGUgYXV0aG9yIG9mIHRoZSBzY3JpcHQpCiAgICAgICAgLmV2YWxtYXggKHRoZSBtYXhpbXVtIG51bWJlciBvZiBwYXJhbXMvYXJndW1lbnRzIHlvdXIgc2NyaXB0IGFjY2VwdHMpCiAgICAgICAgLnJ0eXBlICh0aGUgZm9ybWF0IG9mIHlvdXIgc2NyaXB0J3MgcmVzcG9uc2UpCiAgICAKICAgIEluIGFkZGl0aW9uIHRvIHRoZXNlLCBNQUNST1NTIGF1dG9tYXRpY2FsbHkgYWRkcyAnLm5hbWUnLCAnLnZlcicgYW5kICcuZm5hbWUnICh0aGUgCiAgICBzY3JpcHQncyBjb21tb24gbmFtZSwgdmVyc2lvbiBhbmQgaXRzIGZpbGVuYW1lKS4gTUFDUk9TUyBhbmQgaXRzIHNjcmlwdHMgY2FuIHVzZSAKICAgIHRoZXNlIHRvIHF1aWNrbHkgc2VuZCBkYXRhIGJhY2sgYW5kIGZvcnRoIHRvIGFwcHJvcHJpYXRlIHRvb2xzLgogICAgCiAgICBJZiB5b3VyIHNjcmlwdCBvciBBUEkgdXNlcyBzb21lIGNvbW1hbmRzIHRoYXQgcmVxdWlyZSBhZG1pbiBwcml2aWxlZ2UsIGJ1dCBjYW4gb3ZlcmFsbCAKICAgIHJ1biB3aXRoIGJhc2ljIHVzZXIgcHJpdmlsZWdlcywgeW91IGNhbiBjaGVjayB3aGV0aGVyIHRoZSB2YWx1ZSBmb3IgYCR2ZjE5X1JPQk9URUNIIGlzIAogICAgdHJ1ZSwgd2hpY2ggZ2V0cyBzZXQgb24gc3RhcnR1cCB3aGVuIE1BQ1JPU1MgZGV0ZWN0cyB0aGF0IHRoZSB1c2VyIGlzIG5vdCBhbiBhZG1pbi4gSXQKICAgIHVzZXMgR3JvdXAtUG9saWN5IG5hbWVzIHRvIGRldGVybWluZSB0aGlzLCB5b3UgY2FuIG1vZGlmeSB0aGUgbWV0aG9kIGluIHRoZSBmdW5jdGlvbgogICAgJ3NldFVzZXInIHdpdGhpbiB0aGUgY29yZVx2YWxpZGF0aW9uLnBzMSBmaWxlLgogICAgCiAgICBIaXQgRU5URVIgdG8gY29udGludWUuIgpyZWFkLWhvc3Q=
d3JpdGUtaG9zdCAtZiBncmVlbiAnCiAgICAyLiBUaGUgZW50aXJlIHB1cnBvc2Ugb2YgTUFDUk9TUyBpcyB0byBxdWlja2x5IGdhdGhlciBjb250ZXh0IHdpdGhvdXQgbmVlZGluZwogICAgdG8gbG9nIGludG8gbXVsdGlwbGUgd2ViIGludGVyZmFjZXMgb3IgcnVubmluZyBlbmRsZXNzIHBvd2Vyc2hlbGwgY21kbGV0cy4gSXQKICAgIHN0YXJ0ZWQgb3V0IHByaW1hcmlseSBoYW5kbGluZyB3aW5kb3dzIGFuZCBhY3RpdmUtZGlyZWN0b3J5IGF1dG9tYXRpb25zLCBidXQKICAgIEkgZW5kZWQgdXAgYWRkaW5nIHdheXMgdG8gZHJvcCBBUElzIGFuZCBvdGhlciBhdXRvbWF0aW9ucyBpbiBzbyBJIGNvdWxkIGRvIAogICAgZXZlcnl0aGluZyBmcm9tIHRoZSBzYW1lIHdpbmRvdy4KICAgIAogICAgVG8gYWNjb21wbGlzaCB0aGlzLCBNQUNST1NTIHRvb2xzIHNob3VsZCBiZSBjb2RlZCB0byBjaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBvZiAKICAgIGEgZ2xvYmFsIHZhcmlhYmxlOiAnIC1Ob05ld2xpbmU7IHdyaXRlLWhvc3QgLWYgeWVsbG93ICckUFJPVE9DVUxUVVJFJyAtTm9OZXdsaW5lOwogICAgd3JpdGUtaG9zdCAtZiBncmVlbiAiLgogICAgCiAgICBPYmplY3RzL2FydGlmYWN0cyBvZiBpbnRlcmVzdCBzaG91bGQgYmUgc2V0IGFzIHRoaXMgZ2xvYmFsIHZhcmlhYmxlIHdoZW5ldmVyCiAgICBhcHByb3ByaWF0ZSwgd2hpY2ggbGVhZHMgdG8uLi4KICAgIAogICAgMy4gVGhlIGNvbGxhYigpIGZ1bmN0aW9uLCBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBhdmFpbGFibGVUeXBlcygpIGZ1bmN0aW9uLCBpcyAKICAgIHRoZSBjb3JlIG9mIE1BQ1JPU1MuIFlvdSBjYW4gc2VuZCBhdmFpbGFibGVUeXBlcygpIGEgc2VhcmNoIHRlcm0sIHdoaWNoIGl0IHdpbGwKICAgIHVzZSB0byBmaW5kIHRvb2xzIHdpdGggYSBtYXRjaGluZyAudmFsdHlwZSB2YWx1ZS4gQW55IG1hdGNoaW5nIHRvb2xzIGNhbiB0aGVuCiAgICBiZSBzZW50IHRvIGNvbGxhYigpLCB3aGljaCBydW5zIHRoZSBjYWxsZWQgc2NyaXB0IGFuZCBzZW5kcyBhbnkgb3B0aW9uYWwgcGFyYW1zCiAgICB5b3UgbmVlZCB0byBzZW5kIHRoYXQgYXJlbid0IGAkUFJPVE9DVUxUVVJFLiAoUmVtZW1iZXIsIHNjcmlwdHMgc2hvdWxkIGJlIAogICAgYXV0b21hdGljYWxseSBhY3Rpbmcgb24gYCRQUk9UT0NVTFRVUkUgd2hlcmV2ZXIgaXQgbWFrZXMgc2Vuc2UgdG8uKQogICAgCiAgICBNQUNST1NTIHRvb2xzIHNob3VsZCBhbHNvIGJlIGF3YXJlIHdoZW4gdGhlIGdsb2JhbCB2YXJpYWJsZSAiIC1Ob05ld2xpbmU7CiAgICB3cml0ZS1ob3N0IC1mIHllbGxvdyAnJENBTExFUicgLU5vTmV3bGluZTsKICAgIHdyaXRlLWhvc3QgLWYgZ3JlZW4gIiBoYXMKICAgIGEgdmFsdWUuIFRoaXMgaXMgYSB2YXJpYWJsZSB0aGF0IGNvbGxhYigpIHNldHMgc28gdGhhdCB0aGUgc2NyaXB0IGl0IGV4ZWN1dGVzIAogICAga25vd3Mgd2hpY2ggc2NyaXB0IGlzIGNhbGxpbmcgaXQuIFRoaXMgd2F5LCB0aGUgY2FsbGVkIHNjcmlwdCBjYW4gYWxzbyBwZXJmb3JtIAogICAgYSBjaGVjayBvbiB0aGUgYCRDQUxMRVIncyBhdHRyaWJ1dGVzIGxpa2UgdGhlIC52YWx0eXBlIGFuZCAubGFuZyB2YWx1ZXMsIGFuZCBhY3QgCiAgICBhcHByb3ByaWF0ZWx5LgogICAgCiAgICBIaXQgRU5URVIgdG8gdmlldyBhbiBleGFtcGxlLiIKcmVhZC1ob3N0
d3JpdGUtaG9zdCAtZiBncmVlbiAiICAgIAogICAgRXhhbXBsZSB1c2UgY2FzZTogeW91IGhhdmUgYSBweXRob24gQVBJIHRoYXQgY29ubmVjdHMgdG8gYW4gRURSLCBhbmQgYSBwb3dlcnNoZWxsCiAgICBzY3JpcHQgdGhhdCBjb2xsZWN0cyBhY3RpdmUtZGlyZWN0b3J5IGluZm8uIFlvdSd2ZSBiZWVuIGFsZXJ0ZWQgdG8gc3RyYW5nZSB1c2VyCiAgICBiZWhhdmlvciwgYW5kIHBlcmZvcm0gYSB1c2VybmFtZSBsb29rdXAgaW4gb25lIG9mIHRoZXNlIHNjcmlwdHMuIEJvdGggb2YgdGhlc2UgCiAgICBzY3JpcHRzIGNhbiB0YWxrIHRvIGVhY2ggb3RoZXIgaWYgdGhleSBhcmUgbW9kaWZpZWQgdG8gd29yayBpbiBNQUNST1NTLgogICAgCiAgICBGb3IgdGhpcyBxdWljayBleGFtcGxlLCBqdXN0IGtub3cgdGhhdCBJJ20gc2tpcHBpbmcgc2V2ZXJhbCBsaW5lcyBvZiBjb2RlIHlvdSdsbAogICAgbmVlZCB0byBtYWtlIHVzZSBvZiB0aGUgZGVmYXVsdCBhcmdzIHRoYXQgTUFDUk9TUyBwYXNzZXMgdG8gYWxsIHB5dGhvbiBzY3JpcHRzIC0tCiAgICBydW4gdGhlIE1JTk1BWSBkZW1vIGFuZCByZXZpZXcgdGhlIFxjb3JlXHB5X2NsYXNzZXNcbWNkZWZzLnB5IGZpbGUgdG8gc2VlIGhvdyBpdCAKICAgIGFsbCB3b3Jrcy4KICAgIAogICAgRnJvbSB0aGUgYWN0aXZlLWRpcmVjdG9yeSBzY3JpcHQ6Igp3cml0ZS1ob3N0IC1mIHllbGxvdyAnCiAgICAkUFJPVE9DVUxUVVJFID0gImV2aWxib2IiOyAkdG9vbHMgPSBhdmFpbGFibGVUeXBlcyAidXNlciwgZWRyIgogICAgZm9yZWFjaCggJHRvb2wgaW4gJHRvb2xzICl7IAogICAgICAgIGlmKCR0b29sLnJ0eXBlIC1uZSAib25zY3JlZW4iKXsgJHZhciA9IGNvbGxhYiAkdG9vbC5mbmFtZSAiTXlTY3JpcHQiIH0KICAgICAgICBlbHNleyBjb2xsYWIgJHRvb2wuZm5hbWUgIk15U2NyaXB0IiB9CiAgICB9Jwp3cml0ZS1ob3N0IC1mIGdyZWVuICcKICAgIC4uLmFuZCBmcm9tIHRoZSBBUEkgc2NyaXB0OicKd3JpdGUtaG9zdCAtZiB5ZWxsb3cgJwogICAgaW1wb3J0IHN5cyxtY2RlZnMKICAgIFBST1RPQ1VMVFVSRSA9ICJldmlsYm9iIgogICAgZm9yIHRvb2wgaW4gc3lzLmFyZ3ZbMl06CiAgICAgICAgaWYgc3lzLmFyZ3ZbMl1bdG9vbF0gPT0gInVzciIgb3IgImVkciI6CiAgICAgICAgICAgIHQgPSBzeXMuYXJndls3XSArICJcXFxcIiArIHRvb2wKICAgICAgICAgICAgbWNkZWZzLmNvbGxhYih0LCJNeVNjcmlwdCIsUFJPVE9DVUxUVVJFKSAKICAgIH0nCndyaXRlLWhvc3QgLWYgZ3JlZW4gJwogICAgVGhlIC5ydHlwZSAib25zY3JlZW4iIGluZGljYXRlcyBhIHNjcmlwdCBqdXN0IHdyaXRlcyBpdHMgcmVzdWx0cyB0byBzY3JlZW4uCiAgICAKICAgIEJleW9uZCB0aGUgc2NyaXB0IGNvbGxhYm9yYXRpb24sIE1BQ1JPU1MgYWxzbyBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCBmb3JtYXQgaG93IHlvdXIKICAgIHNjcmlwdCBjYW4gZGlzcGxheSBkYXRhLCB3cml0ZSByZXN1bHRzIHRvIGEgc3ByZWFkc2hlZXQsIGFuZCBjaGVjayBmb3Igb2xkIHJlcG9ydCBmaWxlcyAKICAgIHRoYXQgc2hvdWxkIGJlIGRlbGV0ZWQuCiAgICAKICAgIEZyb20gdGhlIG1haW4gTUFDUk9TUyBtZW51LCBlbnRlciAiZGVidWciIHRvIG9wZW4gdGhlIE1BQ1JPU1MgZGVidWdnZXIuIEhlcmUsIHlvdSBjYW4KICAgIHZpZXcgdGhlIGhlbHAgZmlsZXMgZm9yIGFsbCBvZiB0aGUgZnVuY3Rpb25zLCBhbmQgdGVzdCB0aGVtIG91dCB3aXRoaW4geW91ciBNQUNST1NTCiAgICBzZXNzaW9uLiBUaGlzIHNob3VsZCBoZWxwIHlvdSB3aGVuIGFkZGluZyB2YXJpYWJsZXMgYW5kIGZ1bmN0aW9uIGNhbGxzIHRvIHlvdXIgc2NyaXB0CiAgICBmb3IgdXNlIGluIE1BQ1JPU1MuCiAgICAKICAgIFRoYW5rcyBmb3IgZ2l2aW5nIE1BQ1JPU1MgYSB0cnkhCiAgICAKICAgIEhpdCBFTlRFUiB0byBxdWl0LgogICAgJwpyZWFkLWhvc3Q=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiIFdoYXQgZXhhY3RseSBpcyBNQUNST1NTPyB5b3UgbWlnaHQgYmUgd29uZGVyaW5nLiBXZWxsLCBhcGFydCBmcm9tIHRoZSBncmVhdGVzdAogYW5pbWUgc2VyaWVzIGV2ZXIgKHdlIGRvbid0IHRhbGsgYWJvdXQgbWFjcm9zcyBkZWx0YSwgaXQgZG9lc24ndCBleGlzdCksIGl0IGlzCiBhbiBhaWQgSSBjcmVhdGVkIHllYXJzIGFnbyB0byBhdm9pZCBoYXZpbmcgdG8gaGFuZGphbSBhY3RpdmUtZGlyZWN0b3J5IG9yIHdpbmRvd3MKIGNtZGxldHMgb3ZlciBhbmQgb3ZlciB0byBnZXQgZGF0YSBvbiB0aGluZ3MgSSB3YXMgaW52ZXN0aWdhdGluZy4gT3ZlciB0aW1lIGl0IGdyZXcKIGludG8gYSBwcmV0dHkgaGFuZHkgY29uc29sZSBJIHNoYXJlZCB3aXRoIFNPQyBhbmFseXN0cyB3aG8gYWxzbyBlbmpveSBub3QgaGF2aW5nCiB0byByZW1lbWJlciBldmVyeSBjbWRsZXQgb3IgYWxpYXMgYW5kIGFsbCB0aGVpciBvcHRpb25zLgogICAgCiBCb3R0b20gTGluZSBVcCBGcm9udDogdGhpcyBpcyBub3QgYSB0b29sa2l0LCBhbHRob3VnaCBzb21lIG9mIG15IHRvb2xzIGFyZSBpbmNsdWRlZAogaW4gdGhpcyByZWxlYXNlLiBUaGlzIGlzIGEgZnJhbWV3b3JrIChiZWNhdXNlIGJ1enp3b3JkcykgdGhhdCBoZWxwcyB5b3UgY2hhaW4gWU9VUgogY3VzdG9tIHNjcmlwdHMvdG9vbHMgdG9nZXRoZXIgdG8gcXVpY2tseSBnYXRoZXIgYW5kIGVucmljaCBkYXRhIHNwZWNpZmljIHRvIHlvdXIKIGVudGVycHJpc2UuCgogVGhlIHByaW1hcnkgcHVycG9zZSBvZiBNQUNST1NTIGlzIHRvIGxldCB5b3VyIGF1dG9tYXRpb25zIHRhbGsgdG8gZWFjaCBvdGhlciBhbmQgCiBzaGFyZSBpbmZvL3Jlc291cmNlcy4gRm9yIGV4YW1wbGUsIG1hbnkgc2VjdXJpdHkgdG9vbHMgYW5kIG9ubGluZSBzZXJ2aWNlcyBoYXZlIAogY29tbWFuZC1saW5lIEFQSXMsIGJ1dCBub3QgZXZlcnlib2R5IGhhcyBhIGNlbnRyYWwgb3JjaGVzdHJhdG9yIHRoYXQgY2FuIG1ha2UgZ29vZCAKIHVzZSBvZiB0aGVtLCBhbmQgcnVubmluZyBtYW51YWwgY3VybCByZXF1ZXN0cyB0byB0aGVzZSBBUElzIG1ha2VzIG5vIHNlbnNlLiBFdmVuIAogcGVyZm9ybWluZyBBY3RpdmUtRGlyZWN0b3J5IHRhc2tzIGluIHBvd2Vyc2hlbGwgZ2V0cyBtaW5kLW51bWJpbmcgYWZ0ZXIgdHlwaW5nIGluCiB0aGUgZmlyc3Qgc2V2ZXJhbCBjbWRsZXRzLiAKIAogU2NyaXB0aW5nIHNhdmVzIGxvdHMgb2YgdGltZSwgYnV0IHNjcmlwdHMgYXJlIG5vdCB0eXBpY2FsbHkgY29ubmVjdGVkIHdpdGggZWFjaAogb3RoZXIgYW5kIHlvdSBoYXZlIHRvIGNvcHktcGFzdGUgdGhlIHRhc2sgcmVzdWx0cyBiYWNrIGFuZCBmb3J0aC4KIAogV2hhdCBNQUNST1NTIGNhbiBkbyBmb3IgeW91IGlzIHByb3ZpZGUgeW91ciBTT0MgcXVpY2sgYWNjZXNzIHRvIHlvdXIgQVBJcyBhbmQgCiBXaW5kb3dzLWNlbnRyaWMgZGF0YSBsaWtlIEFjdGl2ZSBEaXJlY3RvcnkuIFllcywgeW91IHN0aWxsIGhhdmUgdG8gd3JpdGUgdGhlIAogc2NyaXB0LCBidXQgTUFDUk9TUyBoZWxwcyBjdXQgZG93biB0aGUgYW1vdW50IG9mIGNvZGUgeW91IGhhdmUgdG8gd3JpdGUgdG8gZmluZCAKIElPQ3MsIGVucmljaCB0aGVtLCBwcm9jZXNzIHRoZW0sIHRoZW4gc3BpdCB0aGVtIG91dCBpbiBhIGZvcm1hdCB0aGF0IGlzbid0IGp1c3QgCiBibG9ja3Mgb2Ygb2YgSlNPTiBvciB3YWxscyBvZiB0ZXh0IChsaWtlIHRoaXMgcGFnZSwgbG9sKS4gVGhlbiB5b3UgYW5kIHlvdXIgCiBhbmFseXN0cyBjYW4gZ2V0IHZpdGFsIGNvbnRleHQgb24gd2hldGhlciB5b3VyIElPQyBpcyBhY3R1YWxseSBhbiBJT0MuCiAgICAKIE5leHQgd2UnbGwgc2VlIHdoYXQgeW91IG5lZWQgdG8ga25vdyB0byBnZXQgc3RhcnRlZC4gSGl0IEVOVEVSIHRvIGNvbnRpbnVlLiI=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgYWJvdmUgdGFibGUgY29udGFpbnMgdGhlIGN1c3RvbSBbbWFjcm9zc10gY2xhc3MgYXR0cmlidXRlcyB5b3VyIHNjcmlwdCB3aWxsIGJlIHJlcXVpcmVkCiB0byB1c2UsIGFuZCBiZWxvdyB0aGF0LCB0aGUgbmFtZXMgb2YgTUFDUk9TUycgbW9zdCBpbXBvcnRhbnQgZ2xvYmFsbHktYXNzaWduZWQgdmFyaWFibGVzLgoKIE1BQ1JPU1MgdXNlcyBhIGhhc2h0YWJsZSB0byBzdG9yZSBhbGwgb2YgdGhlIGRlZmF1bHQgdmFsdWVzIHRoYXQgeW91ciB0b29sc2V0cyBtaWdodCB3YW50IHRvCiBzaGFyZS4gRm9yIGV4YW1wbGUsIEkgdXNlIGl0IHRvIHN0b3JlIHRoZSBVUkxzICYgSVBzIGZvciBBUElzIHRoYXQgbXkgc2NyaXB0cyBuZWVkIHRvIHF1ZXJ5LAogYW1vbmcgb3RoZXIgdGhpbmdzLiBUaGlzIGhhc2h0YWJsZSBpcyBjYWxsZWQgYCR2ZjE5X01QT0QsIG9yICdtaXNzaWxlIHBvZCcuIEl0cyBrZXlzIGFyZSBhbGwKIDMtY2hhcmFjdGVycyBsb25nLCBhbmQgaXRzIHZhbHVlcyBhcmUgYWxsIGJhc2U2NC1lbmNvZGVkLiBXaGVuIE1BQ1JPU1MgaXNuJ3QgcnVubmluZywgdGhlc2UKIGtleS12YWx1ZXMgYXJlIHNpdHRpbmcgaW4gYW4gYWNjZXNzLWNvbnRyb2xsZWQgZmlsZSwgZW5jb2RlZCBzbyB0aGF0IGtleXdvcmQgc2Nhbm5lcnMgYW5kIAogYnVzeWJvZGllcyBkb24ndCBlYXNpbHkgc2VlIHRoZXNlIHRoaW5ncy4KCiBJbiB0aGlzIHJlbGVhc2UsIHRoZXNlIHZhbHVlcyBhcmUgc2l0dGluZyBpbiB0aGUgY29yZSBmb2xkZXIsICd0ZW1wX2NvbmZpZy50eHQnLiBUbyBtYWtlIHVzZQogb2YgaXQgeW91cnNlbGY6CgogICAgLWJhc2U2NC1lbmNvZGUgdGhlIHZhbHVlIHlvdSB3YW50IE1BQ1JPU1MgdG8gYWx3YXlzIGhhdmUgYXZhaWxhYmxlCiAgICAtYWRkIGEgdGhyZWUtY2hhcmFjdGVyIGtleSB0byB0aGUgYmVnaW5uaW5nIG9mIHlvdXIgZW5jb2RlZCB2YWx1ZSwgZXhhbXBsZSAneHl6JwogICAgLWFkZCB0aHJlZSAnQCcgY2hhcmFjdGVycyB0byB0aGUgZW5kIG9mIHRoZSBjdXJyZW50IGJsb2NrIGluIHRlbXBfY29uZmlnLnR4dCwgdGhlbiBwYXN0ZQogICAgeW91ciB2YWx1ZSBhZnRlciB0aGF0LgoKIFRoaXMgaXMgbm90IHNlY3VyaXR5ISBgJHZmMTlfTVBPRCBpcyBub3QgbWVhbnQgZm9yIHN0b3JpbmcgY3JlZGVudGlhbHMgb3Igc2Vuc2l0aXZlIGRhdGEuCgogV2hlbiB5b3UgYXJlIHdyaXRpbmcgeW91ciBhdXRvbWF0aW9ucyBhbmQgbmVlZCB0byBleHRyYWN0IHRoZSBwbGFpbnRleHQgdmFsdWUsIHVzZSBNQUNST1NTJwogYnVpbHQtaW4gZnVuY3Rpb24gJ2dldFRoaXMnLiBJdCB3aWxsIHdyaXRlIHlvdXIgdmFsdWUgdG8gYCR2ZjE5X1JFQUQuIElmIHlvdSB3YW50IHRvIHJldXNlIAogdGhhdCB2YWx1ZSBtb3JlIHRoYW4gb25jZSwgeW91J2xsIG5lZWQgdG8gc3RvcmUgaXQgaW4gYSBuZXcgdmFyaWFibGUgYmVjYXVzZSB2ZjE5X1JFQUQgZ2V0cyAKIHNhbml0aXplZCBhZnRlciB1c2UuIEZvciBleGFtcGxlLCBpZiB5b3UgcHV0IHRoZSBJUCBhZGRyZXNzIG9mIHlvdXIgZmlyZXdhbGwgaW4ga2V5ICd4eXonOiIKCVdyaXRlLUhvc3QgLWYgWUVMTE9XICcKICAgIGdldFRoaXMgJHZmMTlfTVBPRFsieHl6Il07IGN1cmwgLVggUE9TVCAkdmYxOV9SRUFEIDx0aGUgcmVzdCBvZiB5b3VyIEFQSSBxdWVyeS4uLj4nCglXcml0ZS1Ib3N0IC1mIEdSRUVOICcKIFVzaW5nIGdldFRoaXMgYWdhaW4gYWZ0ZXIgdGhhdCBjdXJsIGNvbW1hbmQgd291bGQgb3ZlcndyaXRlIHRoZSAkdmYxOV9SRUFEIHZhbHVlLgogCiBIaXQgRU5URVIgdG8gY29udGludWUuJw==
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBMZXQncyB0YWxrIGFib3V0IHRoaXMgY3VzdG9tIFttYWNyb3NzXSBjbGFzcyBuZXh0LiBFdmVyeXRoaW5nIE1BQ1JPU1MgZ2l2ZXMgdGVjaHMvYW5hbHlzdHMKIGFjY2VzcyB0byBzaG91bGQgYmUgcHV0IGludG8gdGhlICdtb2R1bGVzJyBmb2xkZXIuIElmIHlvdSB3YW50IHlvdXIgc2NyaXB0IHRvIGJlIHJlY29nbml6ZWQgYW5kCiB1c2VkIHdpdGhpbiBNQUNST1NTLCB5b3UgbmVlZCB0byBkZWRpY2F0ZSB0aGUgZmlyc3QgdGhyZWUgbGluZXMgdG8gMSkgdGhlIGRlc2NyaXB0aW9uIG9mIHlvdXIKIGF1dG9tYXRpb24sIDIpIHRoZSB2ZXJzaW9uIG9mIHlvdXIgc2NyaXB0LCBhbmQgMykgdGhlIGNsYXNzIGF0dHJpYnV0ZXMgb2YgeW91ciBzY3JpcHQuIEZvcgogZXhhbXBsZSwgdGhpcyBzY3JpcHQncyBsaW5lcyBhcmU6IgogICAgV3JpdGUtSG9zdCAtZiBDWUFOICcKICAgICNfc2RmMSBEZW1vIC0gYSBiYXNpYyBjb25maWcgd2Fsa3RocnUgKDgtMTAgbWlucykKICAgICNfdmVyIDAuMgogICAgI19jbGFzcyB1c2VyLGRlbW8gc2NyaXB0LHBvd2Vyc2hlbGwsSGlTdXJmQWR2aXNvcnksMCxub25lJwogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgJyNfc2RmMScsICcjX3ZlcicsIGFuZCAnI19jbGFzcycgdGFncyBhbGwgdGVsbCBNQUNST1NTIHRoYXQgaXQgY2FuIHVzZSB5b3VyIHNjcmlwdC4gTUFDUk9TUwogaWdub3JlcyBmaWxlcyBpbiB0aGUgJ21vZHVsZXMnIGZvbGRlciB0aGF0IGRvbid0IGhhdmUgYWxsIG9mIHRoaXMgaW5mb3JtYXRpb24uIExpbmUgMSBpcyB3aGF0CiBnZXRzIHdyaXR0ZW4gdG8gdGhlIG1haW4gbWVudSBzbyBhbmFseXN0cyBrbm93IHJvdWdobHkgd2hhdCB0aGUgc2NyaXB0IGlzIGZvci4gTGluZSAyIGlzIHVzZWQKIGZvciB2ZXJzaW9uIGNvbnRyb2wgYW5kIHBlcmZvcm1pbmcgYXV0by11cGRhdGVzIGlmIHlvdSdyZSBtYWludGFpbmluZyBNQUNST1NTIGluIGEgbG9jYWwgZ2l0IG9yIAogbmV0d29yayBzaGFyZS4gQW5kIExpbmUgMyBpcyBmb3IgeW91ciBzY3JpcHQncyBtYWNyb3NzIGNsYXNzIGF0dHJpYnV0ZXMuIEZyb20gdGhlIGV4YW1wbGUgYWJvdmUsIAogYmVnaW5uaW5nIHdpdGggZmllbGQgMToiCiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnCiAgICB1c2VyIC0gdGhpcyBpcyB0aGUgTE9XRVNUIGxldmVsIG9mIHByaXZpbGVnZSB5b3VyIHNjcmlwdCByZXF1aXJlcyAodXNlciB2cy4gYWRtaW4sIGV0Yy4pCiAgICBkZW1vIHNjcmlwdCAtIHRoaXMgaXMgdGhlIHR5cGUgb2YgZGF0YSB5b3VyIHNjcmlwdCBldmFsdWF0ZXMsIG9yIHRoZSB0YXNrKHMpIGl0IHBlcmZvcm1zCiAgICBwb3dlcnNoZWxsIC0gdGhlIGxhbmd1YWdlIHlvdXIgc2NyaXB0IGlzIHdyaXR0ZW4gaW4gKHBvd2Vyc2hlbGwgdnMuIHB5dGhvbikKICAgIEhpU3VyZkFkdmlzb3J5IC0gVGhlIGF1dGhvciBvZiB0aGUgc2NyaXB0CiAgICAwIC0gdGhlIG1heGltdW0gbnVtYmVyIG9mIHBhcmFtZXRlcnMvYXJncyB5b3VyIHNjcmlwdCBjYW4gYWNjZXB0IGZvciBldmFsdWF0aW9uCiAgICBub25lIC0gdGhlIGZvcm1hdCBvZiB0aGUgc2NyaXB0IHJlc3BvbnNlLCBpZiBhbnknCiAgICBXcml0ZS1Ib3N0IC1mIEdSRUVOICIKIEhpdCBFTlRFUiBhbmQgSSdsbCB1c2UgdGhlIGJ1aWx0LWluIE1BQ1JPU1MgZnVuY3Rpb24gJ1RMJyB0byBzaG93IHlvdSBISUtBUlUncyBhdHRyaWJ1dGVzIGFzIGEgCiBwb3dlcnNoZWxsIG9iamVjdC4i
JycKICAgIFdyaXRlLUhvc3QgLWYgWUVMTE9XICQoVEwgJ0hJS0FSVScpCiAgICBXcml0ZS1Ib3N0IC1mIEdSRUVOICIKIFRoZSBtYWNyb3NzIGNsYXNzIG9iamVjdHMgYWxsb3cgeW91IHRvIHdyaXRlIHlvdXIgYXV0b21hdGlvbnMgd2l0aCBjaGVja3MgdG8gc2VhcmNoIE1BQ1JPU1MgCiB0b29scyBmb3Igd2F5cyB0byBlbnJpY2ggdGhlIGRhdGEgeW91J3JlIHByb2Nlc3NpbmcsIHdoaWNoIGNvbWVzIGluIGhhbmR5IGlmIHlvdSBoYXZlIG1vcmUgCiB0aGFuIG9uZSB0b29sIHRoYXQgY2FuIHByb2Nlc3MgdGhlIHNhbWUga2luZCBvZiBkYXRhLiBNQUNST1NTIGhhcyBhIGZ1bmN0aW9uIGNhbGxlZCAKICdhdmFpbGFibGVUeXBlcycgdGhhdCBsZXRzIHlvdSByZXRyaWV2ZSBhIGxpc3Qgb2YgdG9vbHMgdGhhdCBoYW5kbGUgc3BlY2lmaWMgZGF0YSB0eXBlcy4gCiBUaGVuIHlvdXIgYXV0b21hdGlvbiBjYW4gaXRlcmF0aXZlbHkgc2VuZCBpdHMgcmVzdWx0cyB0byBvbmUgb3IgbW9yZSBvZiB0aGVtIGZvciBwcm9jZXNzaW5nIAogcHJvdmlkZWQgdGhhdCB5b3UncmUgY29uc2lzdGVudCB3aXRoIGhvdyB5b3UgZGVmaW5lIHRoZSAudmFsdHlwZSBhdHRyaWJ1dGUuIEFsc28sIAogJ2F2YWlsYWJsZVR5cGVzJyBjYW4gc2VhcmNoIGZvciBtYXRjaGluZyAqb3IqIGV4YWN0IC52YWx0eXBlIHZhbHVlcy4KIAogRm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIGEgc2NyaXB0IHRoYXQgcXVlcmllcyB0aGUgQVBJIGZvciBhIFNFSU0gb3IgRURSIHBsYXRmb3JtIHRoYXQgcmV0dXJucyAKIHVzZXJuYW1lcyB3aXRoaW4gaXRzIHJlc3BvbnNlcywgeW91IGNvdWxkIGhhdmUgTUFDUk9TUyBhdXRvbWF0aWNhbGx5IHNlbmQgdGhlIHVzZXIgdmFsdWUgdG8gYW55IAogc2NyaXB0cyB0aGF0IGNhbiBwdWxsIGRhdGEgZnJvbSBBRDoiCiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnICAgCiAgICAkc2VuZF90byA9IGF2YWlsYWJsZVR5cGVzICJBY3RpdmUgRGlyZWN0b3J5IgogICAgZm9yZWFjaC1vYmplY3QoICRpIGluICRzZW5kX3RvICl7CiAgICAgICAgY29sbGFiICRpICJNeVNjcmlwdE5hbWUiCiAgICB9JwogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAnCiBCdXQgdGhpcyBpcyBnZXR0aW5nIGEgbGl0dGxlIGFoZWFkIG9mIG91cnNlbHZlcy4gSGl0IEVOVEVSIGZvciBhIGRlbW9uc3RyYXRpb24gb2YgaG93IE1BQ1JPU1MgCiB0b29scyB0YWxrIHRvIGVhY2ggb3RoZXIuJw==
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgZmlyc3QgdGhpbmcgd2UgbmVlZCB0byBkbyBpcyBkZXRlcm1pbmUgd2hhdCBvdXIgaW5kaWNhdG9yIChJT0MpIGlzLCBhbmQgc2V0IGl0IGFzIHRoZSAKIHZhbHVlIGZvciBgJFBST1RPQ1VMVFVSRS4gRXZlcnkgTUFDUk9TUyB0b29sIHNob3VsZCBiZSBjb2RlZCB0byB3YXRjaCBmb3IgYW5kIGFjdCBvbiAKIGAkUFJPVE9DVUxUVVJFIGlmIGl0IGV4aXN0cy4KICAgIAogTGV0J3MgcHJldGVuZCB5b3UncmUgc3RhcnRpbmcgYSB0aHJlYXQtaHVudCwgYW5kIHlvdSB3YW50IHRvIGZvY3VzIG9uIGNoYW5nZXMgYmVpbmcgbWFkZSB0byBhIAogV2luZG93cyBkYXRhYmFzZSBzZXJ2ZXIuIE15IGV2ZW50IElEIHJlZmVyZW5jZSB0b29sIEdVQkFCQSBjYW4gdGVsbCB5b3Ugd2hhdCBhbiBJRCByZXByZXNlbnRzLCAKIG9yIGdpdmUgeW91IHRoZSBJRCBiYXNlZCBvbiBrZXl3b3JkcyB5b3Ugc3VwcGx5LiAoSW5jaWRlbnRhbGx5LCBHVUJBQkEncyBsb29rdXAgdGFibGUgaXMgaW4gdGhlIAogcmVzb3VyY2VzIGZvbGRlciwgd2hpY2ggaGUgZGVjb2RlcyB1c2luZyAiIC1Ob05ld2xpbmU7CiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnZ2V0VGhpcyAkdmYxOV9NUE9EWyJ0YmwiXScgLU5vTmV3bGluZTsgV3JpdGUtSG9zdCAtZiBHUkVFTiAnKSc=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBBbnkgc2NyaXB0IHlvdSBkcm9wIGludG8gdGhlICdtb2R1bGVzJyBmb2xkZXIgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGluY2x1ZGVkIGluIHRoZSBNQUNST1NTIAogdG9vbHNldCBpZiB5b3UgaGF2ZSBkZWZpbmVkIGFsbCB0aGUgYXR0cmlidXRlcyBjb3JyZWN0bHkuIFdoYXQgaWYgaXQncyBhIHB5dGhvbiBzY3JpcHQ/IFdlbGwsIAogTUFDUk9TUyBjb250YWlucyBhIGN1c3RvbSBweXRob24gbGlicmFyeSBjYWxsZWQgbWNkZWZzLiBBbGwgaXQgcmVhbGx5IGRvZXMgaXMgcmVwbGljYXRlIHNvbWUgCiBvZiB0aGUgZnVuY3Rpb25zIGZyb20gdGhlIHV0aWxpdHkucHMxIGZpbGUsIGFuZCBwZXJmb3JtIHNvbWUgc3RhbmRhcmQgY29udmVyc2lvbnMgb2YgcG93ZXJzaGVsbCAKIHZhbHVlcyBpbnRvIHB5dGhvbiB2YWx1ZXMuIE1BQ1JPU1MgaGFuZGxlcyBzZW5kaW5nIGFsbCB0aGVzZSB2YWx1ZXMgb3ZlciB0byB5b3VyIHB5dGhvbiBzY3JpcHRzLgogCiBJJ2xsIGFzayB5b3UgdG8gc2VsZWN0IGEgZmlsZSBuZXh0LiBNYWtlIGl0IGFuIG9mZmljZSBkb2N1bWVudCwgcGRmLCBvciBhIHRleHQgZmlsZS4gV2UnbGwgCiBwcmV0ZW5kIGl0J3MgYSBwaGlzaGluZyBkb2N1bWVudCB5b3UndmUgZGlzY292ZXJlZC4gQWZ0ZXIgeW91IHNlbGVjdCBhIGZpbGUsIEknbGwgc2VuZCBpdCB0byAKIEVMSU5UUywgd2hlcmUgeW91IGNhbiBwZXJmb3JtIGtleXdvcmQgc2NhbnMuIFRoZW4gSSdsbCBmb3J3YXJkIGl0IHRvIHRoZSBvdGhlciBkZW1vIHNjcmlwdCwgCiBNSU5NQVksIGFuZCBzaGUnbGwgc2ltdWxhdGUgcGFyc2luZyBpdCwgYW5kIHRoZW4gc2VuZCB0aGUgZmlsZW5hbWUgYmFjayB0byBNQUNST1NTIHdoZXJlIG15IAogZmlsZXNlYXJjaCB0b29sLCAkSywgd2lsbCB0cnkgdG8gZmluZCBvdGhlciBjb3BpZXMgb2YgaXQgb24geW91ciBob3N0IG9yIG5ldHdvcmsuCiAKIEhpdCBFTlRFUiB0byBzZWxlY3QgYSBmaWxlOiI=
JGR5cmxfaGlrX2xpc3QgPSBAKCRkeXJsX2hpa19maWxlKQogICAgICAgICRHbG9iYWw6UFJPVE9DVUxUVVJFID0gJGR5cmxfaGlrX2xpc3QKICAgICAgICBjb2xsYWIgJ0VMSU5UUy5wczEnICdISUtBUlUnCiAgICAgICAgc3BsYXNoUGFnZQogICAgICAgIFdyaXRlLUhvc3QgLWYgR1JFRU4gIiAgICAgICAgQW5kIG5vdyBJJ2xsIGZvcndhcmQgeW91ciBmaWxlbmFtZSB0byBNSU5NQVkuLi4iCiAgICAgICAgc2xwIDIKICAgICAgICAkR2xvYmFsOlBST1RPQ1VMVFVSRSA9ICRkeXJsX2hpa19maWxlCiAgICAgICAgY29sbGFiICdNSU5NQVkucHknICdISUtBUlUnCiAgICAgICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBXZWxjb21lIGJhY2sgdG8gSElLQVJVISBTb21ldGhpbmcgdG8ga2VlcCBpbiBtaW5kIGlzIHRoYXQgbW9zdCBvZiB0aGUgZ2xvYmFsIHZhcmlhYmxlcyBhbmQgYW55IAogdmFyaWFibGVzIGluIGFueSBzY29wZSB3aXRoIG5hbWVzIGJlZ2lubmluZyBgImAkZHlybF9gIiBnZXQgY2xlYXJlZCBldmVyeSB0aW1lIGEgc2NyaXB0IGV4aXRzIAogYmFjayB0byB0aGUgbWFpbiBNQUNST1NTIG1lbnUgdG8gZW5zdXJlIHRoYXQgc2NyaXB0cyBhbHdheXMgc3RhcnQgYXQgemVybyBhbmQgZnVuY3Rpb24gYXMgZXhwZWN0ZWQuIAogQnV0IGAkUFJPVE9DVUxUVVJFIGRvZXMgTk9UIGdldCBjbGVhcmVkIHVudGlsIHlvdSBkbyBpdCBtYW51YWxseSBmcm9tIHRoZSBtZW51LiBUaGlzIHdheSB5b3UgY2FuIAogY29udGludWUgaW52ZXN0aWdhdGluZyBpdCBpZiBuZWNlc3NhcnkgKGFuZCBNQUNST1NTIG5vdGlmaWVzIHlvdSB3aGVuIGl0IHN0aWxsIGNvbnRhaW5zIGEgdmFsdWUuKSI=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBPa2F5LCBubyBwcm9ibGVtLiBJJ2xsIGp1c3QgZXhwbGFpbiBpdC4gQWZ0ZXIgc2V0dGluZyBgJFBST1RPQ1VMVFVSRSwgdGhlICdjb2xsYWInIAogZnVuY3Rpb24gaXMgdXNlZCB0byBjYWxsIHRoZSBuZXh0IHNjcmlwdCBpbiB5b3VyIHdvcmtmbG93LiBFaXRoZXIgeW91IGFscmVhZHkgaGF2ZSAKIG9uZSBpbiBtaW5kIChpbiB0aGlzIGNhc2UsICdNSU5NQVkucHknKSBvciB5b3Ugc2VsZWN0ZWQgb25lIG9yIG1vcmUgc2NyaXB0cyB2aWEgdGhlIAogJ2F2YWlsYWJsZVR5cGVzJyBmdW5jdGlvbi4iCiAgICAgV3JpdGUtSG9zdCAtZiBZRUxMT1cgJwogICAgICAgICRwcm9jZXNzZWRfSU9DID0gY29sbGFiICJNSU5NQVkucHkiICJISUtBUlUiJwogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBBbGwgeW91IGhhdmUgdG8gc3VwcGx5IGlzIHRoZSBmdWxsIG5hbWUgb2YgdGhlIHNjcmlwdCB5b3UncmUgY2FsbGluZywgdGhlIGNvbW1vbiBuYW1lIAogb2YgeW91ciBzY3JpcHQgKG5vIGV4dGVuc2lvbiksIGFuZCBpZiBhcHBsaWNhYmxlIHlvdSBjYW4gc2VuZCBhIDNyZCBwYXJhbWV0ZXIuIAogYCRQUk9UT0NVTFRVUkUgaXRzZWxmIHNob3VsZCBhdXRvbWF0aWNhbGx5IGJlIHJlYWQgYnkgdGhlIGNhbGxlZCBzY3JpcHQ7IG5vIG5lZWQgdG8gCiBwYXNzIGl0IGludG8gJ2NvbGxhYicuIg==
V3JpdGUtSG9zdCAtZiBDWUFOICIKIEhlcmUgYXJlIHRoZSBmaWxlcyBpbiB0aGUgXGNvcmUgZm9sZGVyIHRoYXQgY29udGFpbiBhbGwgb2YgTUFDUk9TUycgZnVuY3Rpb25zOiIKICAgIFdyaXRlLUhvc3QgJwogICAgLXV0aWxpdHkucHMxCiAgICAgICAgQW55IGZ1bmN0aW9ucyB0aGF0IGFkZCBjYXBhYmlsaXRpZXMgdG8geW91ciBhdXRvbWF0aW9ucyBhcmUgaW4gdGhpcyBmaWxlLiBGb3IgZXhhbXBsZSwKICAgICAgICB0aGUgImdldFRoaXMiIGZ1bmN0aW9uIGNhbiBwZXJmb3JtIEJhc2U2NCBhbmQgaGV4YWRlY2ltYWwgZGVjb2RpbmcsIHRoZSAiZ2V0RmlsZSIKICAgICAgICBmdW5jdGlvbiBjYW4gb3BlbiBkaWFsb2cgd2luZG93cyBmb3IgeW91ciBzY3JpcHRzIHRvIGxldCB1c2VycyBzZWxlY3QgZmlsZXMvZm9sZGVycywKICAgICAgICBhbmQgdGhlICJzaGVldHoiIGZ1bmN0aW9uIGNhbiB3cml0ZSB5b3VyIG91dHB1dHMgdG8gYW4gZXhjZWwgc3ByZWFkc2hlZXQuIE1ha2UKICAgICAgICBzdXJlIHRvIGZhbWlsaWFyaXplIHlvdXJzZWxmIHdpdGggYWxsIHRoZSBmdW5jdGlvbnMgaW4gaGVyZSEKCiAgICAtZGlzcGxheS5wczEKICAgICAgICBUaGUgZnVuY3Rpb25zIGluIHRoaXMgZmlsZSBjb250cm9sIGhvdyB0aGluZ3MgZ2V0IGRpc3BsYXllZCBvbiBzY3JlZW4uIFRoZSAic2NyZWVuUmVzdWx0cyIsCiAgICAgICAgInciIGFuZCAic2NyZWVuUmVzdWx0c0FsdCIgZnVuY3Rpb25zIGNhbiByZWNlaXZlIGlucHV0cyBmcm9tIHlvdXIgc2NyaXB0cyBhbmQgZm9ybWF0IHRoZW0gaW4KICAgICAgICBkaWZmZXJlbnQgd2F5cyB0byBwcmV0dGlmeSB0aGVtIGluIHRoZSBwb3dlcnNoZWxsIHdpbmRvdy4KCiAgICAtdXBkYXRlcy5wczEKICAgICAgICBUaGVzZSBmdW5jdGlvbnMgc2V0IHRoZSBhdHRyaWJ1dGVzIGZvciBhbGwgc2NyaXB0cyBpbiB0aGUgIm1vZHVsZXMiIGZvbGRlci4gSW4gYWRkaXRpb24sIGlmCiAgICAgICAgeW91IGFyZSBtYWludGFpbmluZyB5b3VyIGF1dG9tYXRpb25zIGluIGEgY2VudHJhbCByZXBvc2l0b3J5IGxpa2UgZ2l0bGFiIG9yIGEgZmlsZXNoYXJlLCB0aGV5CiAgICAgICAgYWxsb3cgTUFDUk9TUyB0byBsb29rIGZvciBuZXcgb3IgdXBkYXRlZCBzY3JpcHRzIGFuZCBhdXRvbWF0aWNhbGx5IGRvd25sb2FkIHRoZW0uCgogICAgLXZhbGlkYXRpb24ucHMxCiAgICAgICAgVGhpcyBmaWxlIGNvbnRhaW5zIGZ1bmN0aW9ucyBzcGVjaWZpYyB0byBtYWtpbmcgc3VyZSBzY3JpcHRzIGNob3NlbiBieSB0aGUgdXNlciBhcmUgCiAgICAgICAgYXZhaWxhYmxlLCBhbmQgKGlmIGNvbmZpZ3VyZWQpIHRoYXQgb25seSB2YWxpZCB1c2VycyBjYW4gdXNlIGNlcnRhaW4gc2NyaXB0cy4gSXQgYWxzbwogICAgICAgIGNvbnRhaW5zIG9uZSBvZiB0aGUgcHJpbWFyeSByZWFzb25zIGZvciBNQUNST1NTLCB0aGUgImNvbGxhYiIgZnVuY3Rpb24sIHdoaWNoIHBhc3NlcwogICAgICAgIHZhbHVlcyBmcm9tIG9uZSBzY3JpcHQgdG8gYW5vdGhlciBhbmQgYmFjay4KCiAgICAtc3BsYXNoZXMucHMxCiAgICAgICAgVGhlIGZ1bmN0aW9uICJ0cmFuc2l0aW9uU3BsYXNoIiBjYW4gYmUgY2FsbGVkIHRvIGJyaWVmbHkgZGlzcGxheSBzb21lIE1hY3Jvc3MtcmVsYXRlZAogICAgICAgIEFTQ0lJIGFydC4gWW91IGNhbiBhZGQgeW91ciBvd24gYXJ0IGhlcmUgYXMgd2VsbC4KCiAgICAtY2xhc3Nlcy5wczEKICAgICAgICBUaGUgY3VzdG9tICJtYWNyb3NzIiBwb3dlcnNoZWxsIGNsYXNzIGlzIGhlcmUuIEFkZCB5b3VyIG93biBjdXN0b20gY2xhc3NlcyBhcyBuZWVkZWQsIGFuZAogICAgICAgIE1BQ1JPU1Mgd2lsbCBsb2FkIHRoZW0gYXV0b21hdGljYWxseSBhdCBzdGFydHVwLgoKICAgIC1weV9jbGFzc2VzXG1jZGVmcy5weQogICAgICAgIFRoaXMgaXMgYSBnZW5lcmljIHB5dGhvbiBsaWJyYXJ5IHRoYXQgY29udmVydHMgZnVuY3Rpb25hbGl0eSBpbiAidXRpbGl0eS5wczEiIGludG8KICAgICAgICBweXRob24uIEl0IGNhbiBzb21ldGltZXMgaGVscCB3aXRoIG1pbmltaXppbmcgaW1wb3J0cyBpbiB5b3VyIHB5dGhvbiBzY3JpcHRzIGJ5IGp1c3QKICAgICAgICBpbXBvcnRpbmcgdGhpcyBsaWJyYXJ5Lic=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgb25seSBvdGhlciB0aGluZyB0byBtZW50aW9uIGFib3V0IGNvbmZpZ3VyYXRpb24gaXMgdGhhdCB3aXRoaW4gdGhlIGNvcmVcdmFsaWRhdGlvbi5wczEgCiBmaWxlLCB0aGVyZSBpcyBhIGZ1bmN0aW9uIGNhbGxlZCAnc2V0VXNlcicuIEl0IGlkZW50aWZpZXMgdGhlIHVzZXIgd2hvIGlzIGN1cnJlbnRseSBsYXVuY2hpbmcgCiBNQUNST1NTLCBhbmQgc2V0cyB0aGVpciBkZXNrdG9wIGFzIGAkdmYxOV9ERUZBVUxUUEFUSC4gVGhpcyBwYXRoIGlzIG1lYW50IHRvIGJlIHVzZWQgYnkgCiBNQUNST1NTIHRvb2xzIHRvIHdyaXRlIG91dHB1dHMgdG8uIChUaGlzIGNhbiBiZSBjaGFuZ2VkIHdpdGhpbiB0aGUgZnVuY3Rpb24gaWYgeW91IHdhbnQuKQogCiBUaGlzIGZ1bmN0aW9uIGNhbiBhbHNvIGJlIHVzZWQgdG8gaW1wbGVtZW50IGEgdmVyeSBiYXNpYyBmb3JtIG9mIGFjY2VzcyBjb250cm9sLiBJdCdzIG5vdCAKIHN1cGVyIGdyZWF0LCBidXQgaW4gYW4gQWN0aXZlIERpcmVjdG9yeSBlbnZpcm9tZW50IGl0IGNhbiBoZWxwIHByZXZlbnQgTUFDUk9TUyB1c2Ugb3V0c2lkZSAKIG9mIHlvdXIgU09DLiBNYWtlIHN1cmUgdG8gcmVhZCB0aGUgZG9jdW1lbnRhdGlvbiBpbiB0aGF0IGZpbGUgdG8gc2VlIGlmIHlvdSB3YW50IHRvIGJvdGhlciAKIHdpdGggaXQuCiAKIEFsc28sIGJ5IHVzaW5nIGZ1bmN0aW9ucyBsaWtlIHcgYW5kIGdldFRoaXMgd2l0aGluIHlvdXIgc2NyaXB0cywgeW91IGVuc3VyZSB0aGF0IHRoZXkgY2FuIAogb25seSBiZSBleGVjdXRlZCBmcm9tIHdpdGhpbiBNQUNST1NTLiBTbyBpZiB5b3UncmUgYWNjZXNzaW5nIGNvbnRyb2xsZWQgQVBJcywgYW5kIHNvbWVvbmUgCiB0cmllcyB0byBydW4geW91ciBhdXRvbWF0aW9uIGJ5IGl0c2VsZiwgaXQgd2lsbCBjcmFzaCBvciBhdCBsZWFzdCBlcnJvciBvdXQgdGhlIG1vc3QgaW1wb3J0YW50IAogc2VjdGlvbnMgd2l0aG91dCB0aGVtIHRha2luZyB0aGUgdGltZSB0byB1bmRlcnN0YW5kIGFuZCBieXBhc3MgTUFDUk9TUycgZnVuY3Rpb25zLiBFbmZvcmNlZAogY29kZS1zaWduaW5nIGlzIGhlbHBmdWwgaGVyZS4KIAogRmluYWxseSwgeW91IGNhbiB1c2UgYW4gdW5saXN0ZWQgb3B0aW9uIGluIHRoZSBtYWluIG1lbnUsIiAtTm9OZXdsaW5lOwogICAgV3JpdGUtSG9zdCAtZiBZRUxMT1cgJyAiaGVscCBkZXYiLCcgLU5vTmV3bGluZQogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAnIHdoaWNoIHdpbGwgc2hvdyB5b3UgYWxsIG9mIHRoZSBmdW5jdGlvbnMKIGF2YWlsYWJsZSBhbmQgdGhlaXIgdXNhZ2UuIElmIHlvdSB3YW50IHRvIHRlc3QgYW55IG9mIHRoZXNlLCBqdXN0IHJ1biB0aGVtIHdpdGggdGhlIGRlYnVnIAogY29tbWFuZDonCiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnCiAgICBkZWJ1ZyA8ZnVuY3Rpb24gbmFtZT4gPHBhcmFtZXRlcnM+JwogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAnCiAuLi5vciBqdXN0ICJkZWJ1ZyIuIFRoYW5rcyBmb3IgdGFraW5nIE1BQ1JPU1MgZm9yIGEgc3BpbiwgSSBob3BlIHlvdSBmaW5kIGl0IHVzZWZ1bCEgSGl0IAogRU5URVIgdG8gZXhpdCB0aGlzIGRlbW8uJw==
