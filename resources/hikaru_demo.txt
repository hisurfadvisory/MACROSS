d3JpdGUtaG9zdCAtZiBncmVlbiAnCiAgICBZb3UgaGF2ZSBjaG9zZW4gdGhlIHF1aWNrICYgZGlydHkuIE5vdGUgdGhhdCBNQUNST1NTIGlzIGludGVuZGVkIGZvciB1c2VycyB3aXRoCiAgICBhdCBsZWFzdCBtb2RlcmF0ZSBzY3JpcHRpbmcgc2tpbGxzLiBXaXRoIHRoYXQgaW4gbWluZCwgSGVyZSBhcmUgdGhlIGJhc2ljcyBmb3IgCiAgICBhZGRpbmcgeW91ciBhdXRvbWF0aW9ucyB0byBNQUNST1NTIQogICAgCiAgICAxLiBZb3VyIHNjcmlwdHMgZ28gaW4gdGhlICJcbW9kdWxlcyIgZm9sZGVyLCBhbmQgdGhleSBuZWVkIHRvIGJlZ2luIHdpdGggMyAKICAgIHNwZWNpZmljIGxpbmVzLCBvdGhlcndpc2UgTUFDUk9TUyBpZ25vcmVzIHRoZW06Jwp3cml0ZS1ob3N0IC1mIHllbGxvdyAnCiAgICAgICAgI19zZGYxIEZpcnN0IGxpbmUgaXMgYSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB5b3VyIHNjcmlwdAogICAgICAgICNfdmVyIDEuMAogICAgICAgICNfY2xhc3MgdXNlcixpb2MgZXh0cmFjdGlvbixweXRob24sSGlTdXJmQWR2aXNvcnksMSxsaXN0Jwp3cml0ZS1ob3N0IC1mIGdyZWVuICIKICAgIFRoZSBmaXJzdCBsaW5lIGlzIHdoYXQgZ2V0cyB3cml0dGVuIHRvIHRoZSBNQUNST1NTIG1lbnUuIFRoZSBzZWNvbmQgbGluZSBpcyB1c2VkCiAgICBmb3IgdmVyc2lvbmluZy9hdXRvLXVwZGF0ZXMgaWYgeW91IGhvc3QgbWFzdGVyIGNvcGllcyBvZiB0aGVzZSBzY3JpcHRzIHNvbWVwbGFjZS4KICAgIGFuZCB0aGUgdGhpcmQgbGluZSBpcyB1c2VkIHRvIGNsYXNzaWZ5IHlvdXIgc2NyaXB0IHdpdGggdGhlIGN1c3RvbSBbbWFjcm9zc10gY2xhc3MuCiAgICAKICAgIEluIG9yZGVyLCB0aGVzZSBbbWFjcm9zc10gY2xhc3MgYXR0cmlidXRlcyBhcmUKICAgICAgICAucHJpdiAodGhlIExPV0VTVCBsZXZlbCBvZiBwcml2aWxlZ2UgeW91ciBzY3JpcHQgbmVlZHMgdG8gcnVuOyB1c2VyIHZzLiBhZG1pbikKICAgICAgICAudmFsdHlwZSAodGhlIHR5cGUgb2YgZGF0YSB5b3UgcHJvY2Vzcywgb3IgdGhlIHRhc2sgeW91IHBlcmZvcm0pCiAgICAgICAgLmxhbmcgKHRoZSBsYW5ndWFnZSBvZiB0aGUgc2NyaXB0KQogICAgICAgIC5hdXRoICh0aGUgYXV0aG9yIG9mIHRoZSBzY3JpcHQpCiAgICAgICAgLmV2YWxtYXggKHRoZSBtYXhpbXVtIG51bWJlciBvZiBwYXJhbXMvYXJndW1lbnRzIHlvdXIgc2NyaXB0IGFjY2VwdHMpCiAgICAgICAgLnJ0eXBlICh0aGUgZm9ybWF0IG9mIHlvdXIgc2NyaXB0J3MgcmVzcG9uc2UpCiAgICAKICAgIEluIGFkZGl0aW9uIHRvIHRoZXNlLCBNQUNST1NTIGF1dG9tYXRpY2FsbHkgYWRkcyAnLm5hbWUnLCAnLnZlcicgYW5kICcuZm5hbWUnICh0aGUgCiAgICBzY3JpcHQncyBjb21tb24gbmFtZSwgdmVyc2lvbiBhbmQgaXRzIGZpbGVuYW1lKS4gTUFDUk9TUyBhbmQgaXRzIHNjcmlwdHMgY2FuIHVzZSAKICAgIHRoZXNlIHRvIHF1aWNrbHkgc2VuZCBkYXRhIGJhY2sgYW5kIGZvcnRoIHRvIGFwcHJvcHJpYXRlIHRvb2xzLgogICAgCiAgICBJZiB5b3VyIHNjcmlwdCBvciBBUEkgdXNlcyBzb21lIGNvbW1hbmRzIHRoYXQgcmVxdWlyZSBhZG1pbiBwcml2aWxlZ2UsIGJ1dCBjYW4gb3ZlcmFsbCAKICAgIHJ1biB3aXRoIGJhc2ljIHVzZXIgcHJpdmlsZWdlcywgeW91IGNhbiBjaGVjayB3aGV0aGVyIHRoZSB2YWx1ZSBmb3IgdmYxOV9ST0JPVEVDSCBpcyAKICAgIHRydWUsIHdoaWNoIGdldHMgc2V0IG9uIHN0YXJ0dXAgd2hlbiBNQUNST1NTIGRldGVjdHMgdGhhdCB0aGUgdXNlciBpcyBub3QgYW4gYWRtaW4uCiAgICAKICAgIEhpdCBFTlRFUiB0byBjb250aW51ZS4iCnJlYWQtaG9zdA==
d3JpdGUtaG9zdCAtZiBncmVlbiAnCiAgICAyLiBUaGUgZW50aXJlIHB1cnBvc2Ugb2YgTUFDUk9TUyBpcyB0byBxdWlja2x5IGdhdGhlciBjb250ZXh0IHdpdGhvdXQgbmVlZGluZwogICAgdG8gbG9nIGludG8gbXVsdGlwbGUgd2ViIGludGVyZmFjZXMgb3IgcnVubmluZyBlbmRsZXNzIHBvd2Vyc2hlbGwgY21kbGV0cy4gSXQKICAgIHN0YXJ0ZWQgb3V0IHByaW1hcmlseSBoYW5kbGluZyB3aW5kb3dzIGFuZCBhY3RpdmUtZGlyZWN0b3J5IGF1dG9tYXRpb25zLCBidXQKICAgIEkgZW5kZWQgdXAgYWRkaW5nIHdheXMgdG8gZHJvcCBBUElzIGFuZCBvdGhlciBhdXRvbWF0aW9ucyBpbiBzbyBJIGNvdWxkIGRvIAogICAgZXZlcnl0aGluZyBmcm9tIHRoZSBzYW1lIHdpbmRvdy4KICAgIAogICAgVG8gYWNjb21wbGlzaCB0aGlzLCBNQUNST1NTIHRvb2xzIHNob3VsZCBiZSBjb2RlZCB0byBjaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBvZiAKICAgIGEgZ2xvYmFsIHZhcmlhYmxlOiAnIC1Ob05ld2xpbmU7IHdyaXRlLWhvc3QgLWYgeWVsbG93ICckUFJPVE9DVUxUVVJFJyAtTm9OZXdsaW5lOwogICAgd3JpdGUtaG9zdCAtZiBncmVlbiAiLgogICAgCiAgICBPYmplY3RzL2FydGlmYWN0cyBvZiBpbnRlcmVzdCBzaG91bGQgYmUgc2V0IGFzIHRoaXMgZ2xvYmFsIHZhcmlhYmxlIHdoZW5ldmVyCiAgICBhcHByb3ByaWF0ZSwgd2hpY2ggbGVhZHMgdG8uLi4KICAgIAogICAgMy4gVGhlIGNvbGxhYigpIGZ1bmN0aW9uLCBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBhdmFpbGFibGVUeXBlcygpIGZ1bmN0aW9uLCBpcyAKICAgIHRoZSBjb3JlIG9mIE1BQ1JPU1MuIFlvdSBjYW4gc2VuZCBhdmFpbGFibGVUeXBlcygpIGEgc2VhcmNoIHRlcm0sIHdoaWNoIGl0IHdpbGwKICAgIHVzZSB0byBmaW5kIHRvb2xzIHdpdGggYSBtYXRjaGluZyAudmFsdHlwZSB2YWx1ZS4gQW55IG1hdGNoaW5nIHRvb2xzIGNhbiB0aGVuCiAgICBiZSBzZW50IHRvIGNvbGxhYigpLCB3aGljaCBydW5zIHRoZSBjYWxsZWQgc2NyaXB0IGFuZCBzZW5kcyBhbnkgb3B0aW9uYWwgcGFyYW1zCiAgICB5b3UgbmVlZCB0byBzZW5kIHRoYXQgYXJlbid0IFBST1RPQ1VMVFVSRS4gKFJlbWVtYmVyLCBzY3JpcHRzIHNob3VsZCBiZSAKICAgIGF1dG9tYXRpY2FsbHkgYWN0aW5nIG9uIFBST1RPQ1VMVFVSRSB3aGVyZXZlciBpdCBtYWtlcyBzZW5zZSB0by4pCiAgICAKICAgIE1BQ1JPU1MgdG9vbHMgc2hvdWxkIGFsc28gYmUgYXdhcmUgd2hlbiB0aGUgZ2xvYmFsIHZhcmlhYmxlICIgLU5vTmV3bGluZTsKICAgIHdyaXRlLWhvc3QgLWYgeWVsbG93ICckQ0FMTEVSJyAtTm9OZXdsaW5lOwogICAgd3JpdGUtaG9zdCAtZiBncmVlbiAiIGhhcwogICAgYSB2YWx1ZS4gVGhpcyBpcyBhIHZhcmlhYmxlIHRoYXQgY29sbGFiKCkgc2V0cyBzbyB0aGF0IHRoZSBzY3JpcHQgaXQgZXhlY3V0ZXMgCiAgICBrbm93cyB3aGljaCBzY3JpcHQgaXMgY2FsbGluZyBpdC4gVGhpcyB3YXksIHRoZSBjYWxsZWQgc2NyaXB0IGNhbiBhbHNvIHBlcmZvcm0gCiAgICBhIGNoZWNrIG9uIHRoZSBDQUxMRVIncyBhdHRyaWJ1dGVzIGxpa2UgdGhlIC52YWx0eXBlIGFuZCAubGFuZyB2YWx1ZXMsIGFuZCBhY3QgCiAgICBhcHByb3ByaWF0ZWx5LgogICAgCiAgICBIaXQgRU5URVIgdG8gdmlldyBhbiBleGFtcGxlLiIKcmVhZC1ob3N0
d3JpdGUtaG9zdCAtZiBncmVlbiAiICAgIAogICAgRXhhbXBsZSB1c2UgY2FzZTogeW91IGhhdmUgYSBweXRob24gQVBJIHRoYXQgY29ubmVjdHMgdG8gYW4gRURSLCBhbmQgYSBwb3dlcnNoZWxsCiAgICBzY3JpcHQgdGhhdCBjb2xsZWN0cyBhY3RpdmUtZGlyZWN0b3J5IGluZm8uIFlvdSd2ZSBiZWVuIGFsZXJ0ZWQgdG8gc3RyYW5nZSB1c2VyCiAgICBiZWhhdmlvciwgYW5kIHBlcmZvcm0gYSB1c2VybmFtZSBsb29rdXAgaW4gb25lIG9mIHRoZXNlIHNjcmlwdHMuIEJvdGggb2YgdGhlc2UgCiAgICBzY3JpcHRzIGNhbiB0YWxrIHRvIGVhY2ggb3RoZXIgaWYgdGhleSBhcmUgbW9kaWZpZWQgdG8gd29yayBpbiBNQUNST1NTLgogICAgCiAgICBGb3IgdGhpcyBxdWljayBleGFtcGxlLCBqdXN0IGtub3cgdGhhdCBJJ20gc2tpcHBpbmcgc2V2ZXJhbCBsaW5lcyBvZiBjb2RlIHlvdSdsbAogICAgbmVlZCB0byBtYWtlIHVzZSBvZiB0aGUgZGVmYXVsdCBhcmdzIHRoYXQgTUFDUk9TUyBwYXNzZXMgdG8gYWxsIHB5dGhvbiBzY3JpcHRzIC0tCiAgICBydW4gdGhlIE1JTk1BWSBkZW1vIGFuZCByZXZpZXcgdGhlIFxjb3JlXHB5X2NsYXNzZXNcbWNkZWZzLnB5IGZpbGUgdG8gc2VlIGhvdyBpdCAKICAgIGFsbCB3b3Jrcy4KICAgIAogICAgRnJvbSB0aGUgYWN0aXZlLWRpcmVjdG9yeSBzY3JpcHQ6Igp3cml0ZS1ob3N0IC1mIHllbGxvdyAnCiAgICAkUFJPVE9DVUxUVVJFID0gImV2aWxib2IiOyAkdG9vbHMgPSBhdmFpbGFibGVUeXBlcyAidXNlciwgZWRyIgogICAgZm9yZWFjaCggJHRvb2wgaW4gJHRvb2xzICl7IAogICAgICAgIGlmKCR0b29sLnJ0eXBlIC1uZSAib25zY3JlZW4iKXsgJHZhciA9IGNvbGxhYiAkdG9vbC5mbmFtZSAiTXlTY3JpcHQiIH0KICAgICAgICBlbHNleyBjb2xsYWIgJHRvb2wuZm5hbWUgIk15U2NyaXB0IiB9CiAgICB9Jwp3cml0ZS1ob3N0IC1mIGdyZWVuICcKICAgIC4uLmFuZCBmcm9tIHRoZSBBUEkgc2NyaXB0OicKd3JpdGUtaG9zdCAtZiB5ZWxsb3cgJwogICAgaW1wb3J0IHN5cyxtY2RlZnMKICAgIFBST1RPQ1VMVFVSRSA9ICJldmlsYm9iIgogICAgZm9yIHRvb2wgaW4gc3lzLmFyZ3ZbMl06CiAgICAgICAgaWYgc3lzLmFyZ3ZbMl1bdG9vbF0gPT0gInVzciIgb3IgImVkciI6CiAgICAgICAgICAgIHQgPSBzeXMuYXJndls3XSArICJcXFxcIiArIHRvb2wKICAgICAgICAgICAgbWNkZWZzLmNvbGxhYih0LCJNeVNjcmlwdCIsUFJPVE9DVUxUVVJFKSAKICAgIH0nCndyaXRlLWhvc3QgLWYgZ3JlZW4gJwogICAgVGhlIC5ydHlwZSAib25zY3JlZW4iIGluZGljYXRlcyBhIHNjcmlwdCBqdXN0IHdyaXRlcyBpdHMgcmVzdWx0cyB0byBzY3JlZW4uCiAgICAKICAgIEJleW9uZCB0aGUgc2NyaXB0IGNvbGxhYm9yYXRpb24sIE1BQ1JPU1MgYWxzbyBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCBmb3JtYXQgaG93IHlvdXIKICAgIHNjcmlwdCBjYW4gZGlzcGxheSBkYXRhLCB3cml0ZSByZXN1bHRzIHRvIGEgc3ByZWFkc2hlZXQsIGFuZCBjaGVjayBmb3Igb2xkIHJlcG9ydCBmaWxlcyAKICAgIHRoYXQgc2hvdWxkIGJlIGRlbGV0ZWQuCiAgICAKICAgIEZyb20gdGhlIG1haW4gTUFDUk9TUyBtZW51LCBlbnRlciAiZGVidWciIHRvIG9wZW4gdGhlIE1BQ1JPU1MgZGVidWdnZXIuIEhlcmUsIHlvdSBjYW4KICAgIHZpZXcgdGhlIGhlbHAgZmlsZXMgZm9yIGFsbCBvZiB0aGUgZnVuY3Rpb25zLCBhbmQgdGVzdCB0aGVtIG91dCB3aXRoaW4geW91ciBNQUNST1NTCiAgICBzZXNzaW9uLiBUaGlzIHNob3VsZCBoZWxwIHlvdSB3aGVuIGFkZGluZyB2YXJpYWJsZXMgYW5kIGZ1bmN0aW9uIGNhbGxzIHRvIHlvdXIgc2NyaXB0CiAgICBmb3IgdXNlIGluIE1BQ1JPU1MuCiAgICAKICAgIFRoYW5rcyBmb3IgZ2l2aW5nIE1BQ1JPU1MgYSB0cnkhCiAgICAKICAgIEhpdCBFTlRFUiB0byBxdWl0LgogICAgJwpyZWFkLWhvc3Q=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiIFdoYXQgZXhhY3RseSBpcyBNQUNST1NTPyB5b3UgbWlnaHQgYmUgd29uZGVyaW5nLiBXZWxsLCBhcGFydCBmcm9tIHRoZSBncmVhdGVzdAogYW5pbWUgc2VyaWVzIGV2ZXIgKHdlIGRvbid0IHRhbGsgYWJvdXQgbWFjcm9zcyBkZWx0YSwgaXQgZG9lc24ndCBleGlzdCksIGl0IGlzCiBhbiBhaWQgSSBjcmVhdGVkIHllYXJzIGFnbyB0byBhdm9pZCBoYXZpbmcgdG8gaGFuZGphbSBhY3RpdmUtZGlyZWN0b3J5IG9yIHdpbmRvd3MKIGNtZGxldHMgb3ZlciBhbmQgb3ZlciB0byBnZXQgZGF0YSBvbiB0aGluZ3MgSSB3YXMgaW52ZXN0aWdhdGluZy4gT3ZlciB0aW1lIGl0IGdyZXcKIGludG8gYSBwcmV0dHkgaGFuZHkgY29uc29sZSBJIHNoYXJlZCB3aXRoIFNPQyBhbmFseXN0cyB3aG8gYWxzbyBlbmpveSBub3QgaGF2aW5nCiB0byByZW1lbWJlciBldmVyeSBjbWRsZXQgb3IgYWxpYXMgYW5kIGFsbCB0aGVpciBvcHRpb25zLgogICAgCiBCb3R0b20gTGluZSBVcCBGcm9udDogdGhpcyBpcyBub3QgYSB0b29sa2l0LCBhbHRob3VnaCBzb21lIG9mIG15IHRvb2xzIGFyZSBpbmNsdWRlZAogaW4gdGhpcyByZWxlYXNlLiBUaGlzIGlzIGEgZnJhbWV3b3JrIChiZWNhdXNlIGJ1enp3b3JkcykgdGhhdCBoZWxwcyB5b3UgY2hhaW4gWU9VUgogY3VzdG9tIHNjcmlwdHMvdG9vbHMgdG9nZXRoZXIgdG8gcXVpY2tseSBnYXRoZXIgYW5kIGVucmljaCBkYXRhIHNwZWNpZmljIHRvIHlvdXIKIGVudGVycHJpc2UuCgogVGhlIHByaW1hcnkgcHVycG9zZSBvZiBNQUNST1NTIGlzIHRvIGxldCB5b3VyIGF1dG9tYXRpb25zIHRhbGsgdG8gZWFjaCBvdGhlciBhbmQgCiBzaGFyZSBpbmZvL3Jlc291cmNlcy4gRm9yIGV4YW1wbGUsIG1hbnkgc2VjdXJpdHkgdG9vbHMgYW5kIG9ubGluZSBzZXJ2aWNlcyBoYXZlIAogY29tbWFuZC1saW5lIEFQSXMsIGJ1dCBub3QgZXZlcnlib2R5IGhhcyBhIGNlbnRyYWwgb3JjaGVzdHJhdG9yIHRoYXQgY2FuIG1ha2UgZ29vZCAKIHVzZSBvZiB0aGVtLCBhbmQgcnVubmluZyBtYW51YWwgY3VybCByZXF1ZXN0cyB0byB0aGVzZSBBUElzIG1ha2VzIG5vIHNlbnNlLiBFdmVuIAogcGVyZm9ybWluZyBBY3RpdmUtRGlyZWN0b3J5IHRhc2tzIGluIHBvd2Vyc2hlbGwgZ2V0cyBtaW5kLW51bWJpbmcgYWZ0ZXIgdHlwaW5nIGluCiB0aGUgZmlyc3Qgc2V2ZXJhbCBjbWRsZXRzLiAKIAogU2NyaXB0aW5nIHNhdmVzIGxvdHMgb2YgdGltZSwgYnV0IHNjcmlwdHMgYXJlIG5vdCB0eXBpY2FsbHkgY29ubmVjdGVkIHdpdGggZWFjaAogb3RoZXIgYW5kIHlvdSBoYXZlIHRvIGNvcHktcGFzdGUgdGhlIHRhc2sgcmVzdWx0cyBiYWNrIGFuZCBmb3J0aC4KIAogV2hhdCBNQUNST1NTIGNhbiBkbyBmb3IgeW91IGlzIHByb3ZpZGUgeW91ciBTT0MgcXVpY2sgYWNjZXNzIHRvIHlvdXIgQVBJcyBhbmQgCiBXaW5kb3dzLWNlbnRyaWMgZGF0YSBsaWtlIEFjdGl2ZSBEaXJlY3RvcnkuIFllcywgeW91IHN0aWxsIGhhdmUgdG8gd3JpdGUgdGhlIAogc2NyaXB0LCBidXQgTUFDUk9TUyBoZWxwcyBjdXQgZG93biB0aGUgYW1vdW50IG9mIGNvZGUgeW91IGhhdmUgdG8gd3JpdGUgdG8gZmluZCAKIElPQ3MsIGVucmljaCB0aGVtLCBwcm9jZXNzIHRoZW0sIHRoZW4gc3BpdCB0aGVtIG91dCBpbiBhIGZvcm1hdCB0aGF0IGlzbid0IGp1c3QgCiBibG9ja3Mgb2Ygb2YgSlNPTiBvciB3YWxscyBvZiB0ZXh0IChsaWtlIHRoaXMgcGFnZSwgbG9sKS4gVGhlbiB5b3UgYW5kIHlvdXIgCiBhbmFseXN0cyBjYW4gZ2V0IHZpdGFsIGNvbnRleHQgb24gd2hldGhlciB5b3VyIElPQyBpcyBhY3R1YWxseSBhbiBJT0MuCiAgICAKIE5leHQgd2UnbGwgc2VlIHdoYXQgeW91IG5lZWQgdG8ga25vdyB0byBnZXQgc3RhcnRlZC4gSGl0IEVOVEVSIHRvIGNvbnRpbnVlLiI=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgYWJvdmUgdGFibGUgY29udGFpbnMgdGhlIGN1c3RvbSBbbWFjcm9zc10gY2xhc3MgYXR0cmlidXRlcyB5b3VyIHNjcmlwdCB3aWxsIGJlIHJlcXVpcmVkCiB0byB1c2UsIGFuZCBiZWxvdyB0aGF0LCB0aGUgbmFtZXMgb2YgTUFDUk9TUycgbW9zdCBpbXBvcnRhbnQgZ2xvYmFsbHktYXNzaWduZWQgdmFyaWFibGVzLgoKIE1BQ1JPU1MgdXNlcyBhIGhhc2h0YWJsZSB0byBzdG9yZSBhbGwgb2YgdGhlIGRlZmF1bHQgdmFsdWVzIHRoYXQgeW91ciB0b29sc2V0cyBtaWdodCB3YW50IHRvCiBzaGFyZS4gRm9yIGV4YW1wbGUsIEkgdXNlIGl0IHRvIHN0b3JlIHRoZSBVUkxzICYgSVBzIGZvciBBUElzIHRoYXQgbXkgc2NyaXB0cyBuZWVkIHRvIHF1ZXJ5LAogYW1vbmcgb3RoZXIgdGhpbmdzLiBUaGlzIGhhc2h0YWJsZSBpcyBjYWxsZWQgJCgnJCcrJ3ZmMTlfTVBPRCcpLCBvciAnbWlzc2lsZSBwb2QnLiBJdHMga2V5cyBhcmUgYWxsCiAzLWNoYXJhY3RlcnMgbG9uZywgYW5kIGl0cyB2YWx1ZXMgYXJlIGFsbCBiYXNlNjQtZW5jb2RlZC4gV2hlbiBNQUNST1NTIGlzbid0IHJ1bm5pbmcsIHRoZXNlCiBrZXktdmFsdWVzIGFyZSBzaXR0aW5nIGluIGFuIGFjY2Vzcy1jb250cm9sbGVkIGZpbGUsIGVuY29kZWQgc28gdGhhdCBrZXl3b3JkIHNjYW5uZXJzIGFuZCAKIGJ1c3lib2RpZXMgZG9uJ3QgZWFzaWx5IHNlZSB0aGVzZSB0aGluZ3MuCgogSW4gdGhpcyByZWxlYXNlLCB0aGVzZSB2YWx1ZXMgYXJlIHNpdHRpbmcgaW4gdGhlIGNvcmUgZm9sZGVyLCAndGVtcF9jb25maWcudHh0Jy4gVG8gbWFrZSB1c2UKIG9mIGl0IHlvdXJzZWxmOgoKICAgIC1iYXNlNjQtZW5jb2RlIHRoZSB2YWx1ZSB5b3Ugd2FudCBNQUNST1NTIHRvIGFsd2F5cyBoYXZlIGF2YWlsYWJsZQogICAgLWFkZCBhIHRocmVlLWNoYXJhY3RlciBrZXkgdG8gdGhlIGJlZ2lubmluZyBvZiB5b3VyIGVuY29kZWQgdmFsdWUsIGV4YW1wbGUgJ3h5eicKICAgIC1hZGQgdGhyZWUgJ0AnIGNoYXJhY3RlcnMgdG8gdGhlIGVuZCBvZiB0aGUgY3VycmVudCBibG9jayBpbiB0ZW1wX2NvbmZpZy50eHQsIHRoZW4gcGFzdGUKICAgIHlvdXIgdmFsdWUgYWZ0ZXIgdGhhdC4KCiBUaGlzIGlzIG5vdCBzZWN1cml0eSEgJCgnJCcgKyAndmYxOV9NUE9EJykgaXMgbm90IG1lYW50IGZvciBzdG9yaW5nIGNyZWRlbnRpYWxzIG9yIHNlbnNpdGl2ZSBkYXRhLgoKIFdoZW4geW91IGFyZSB3cml0aW5nIHlvdXIgYXV0b21hdGlvbnMgYW5kIG5lZWQgdG8gZXh0cmFjdCB0aGUgcGxhaW50ZXh0IHZhbHVlLCB1c2UgTUFDUk9TUycKIGJ1aWx0LWluIGZ1bmN0aW9uICdnZXRUaGlzJy4gSXQgd2lsbCB3cml0ZSB5b3VyIHZhbHVlIHRvICQoJyQnKyd2ZjE5X1JFQUQnKS4gSWYgeW91IHdhbnQgdG8gcmV1c2UgdGhhdAogdmFsdWUgbW9yZSB0aGFuIG9uY2UsIHlvdSdsbCBuZWVkIHRvIHN0b3JlIGl0IGluIGEgbmV3IHZhcmlhYmxlIGJlY2F1c2UgdmYxOV9SRUFEIGdldHMgc2FuaXRpemVkCiBhZnRlciB1c2UuIEZvciBleGFtcGxlLCBpZiB5b3UgcHV0IHRoZSBJUCBhZGRyZXNzIG9mIHlvdXIgZmlyZXdhbGwgaW4ga2V5ICd4eXonOiIKCVdyaXRlLUhvc3QgLWYgWUVMTE9XICcKICAgIGdldFRoaXMgJHZmMTlfTVBPRFsieHl6Il07IGN1cmwgLVggUE9TVCAkdmYxOV9SRUFEIDx0aGUgcmVzdCBvZiB5b3VyIEFQSSBxdWVyeS4uLj4nCglXcml0ZS1Ib3N0IC1mIEdSRUVOICcKIFVzaW5nIGdldFRoaXMgYWdhaW4gYWZ0ZXIgdGhhdCBjdXJsIGNvbW1hbmQgd291bGQgb3ZlcndyaXRlIHRoZSAkdmYxOV9SRUFEIHZhbHVlLiBIaXQgRU5URVIgdG8KIGNvbnRpbnVlLic=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBMZXQncyB0YWxrIGFib3V0IHRoaXMgY3VzdG9tIFttYWNyb3NzXSBjbGFzcyBuZXh0LiBFdmVyeXRoaW5nIE1BQ1JPU1MgZ2l2ZXMgdGVjaHMvYW5hbHlzdHMKIGFjY2VzcyB0byBzaG91bGQgYmUgcHV0IGludG8gdGhlICdtb2R1bGVzJyBmb2xkZXIuIElmIHlvdSB3YW50IHlvdXIgc2NyaXB0IHRvIGJlIHJlY29nbml6ZWQgYW5kCiB1c2VkIHdpdGhpbiBNQUNST1NTLCB5b3UgbmVlZCB0byBkZWRpY2F0ZSB0aGUgZmlyc3QgdGhyZWUgbGluZXMgdG8gMSkgdGhlIGRlc2NyaXB0aW9uIG9mIHlvdXIKIGF1dG9tYXRpb24sIDIpIHRoZSB2ZXJzaW9uIG9mIHlvdXIgc2NyaXB0LCBhbmQgMykgdGhlIGNsYXNzIGF0dHJpYnV0ZXMgb2YgeW91ciBzY3JpcHQuIEZvcgogZXhhbXBsZSwgdGhpcyBzY3JpcHQncyBsaW5lcyBhcmU6IgogICAgV3JpdGUtSG9zdCAtZiBDWUFOICcKICAgICNfc2RmMSBEZW1vIC0gYSBiYXNpYyBjb25maWcgd2Fsa3RocnUgKDgtMTAgbWlucykKICAgICNfdmVyIDAuMgogICAgI19jbGFzcyB1c2VyLGRlbW8gc2NyaXB0LHBvd2Vyc2hlbGwsSGlTdXJmQWR2aXNvcnksMCxub25lJwogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgJyNfc2RmMScsICcjX3ZlcicsIGFuZCAnI19jbGFzcycgdGFncyBhbGwgdGVsbCBNQUNST1NTIHRoYXQgaXQgY2FuIHVzZSB5b3VyIHNjcmlwdC4gTUFDUk9TUwogaWdub3JlcyBmaWxlcyBpbiB0aGUgJ21vZHVsZXMnIGZvbGRlciB0aGF0IGRvbid0IGhhdmUgYWxsIG9mIHRoaXMgaW5mb3JtYXRpb24uIExpbmUgMSBpcyB3aGF0CiBnZXRzIHdyaXR0ZW4gdG8gdGhlIG1haW4gbWVudSBzbyBhbmFseXN0cyBrbm93IHJvdWdobHkgd2hhdCB0aGUgc2NyaXB0IGlzIGZvci4gTGluZSAyIGlzIHVzZWQKIGZvciB2ZXJzaW9uIGNvbnRyb2wgYW5kIHBlcmZvcm1pbmcgYXV0by11cGRhdGVzIGlmIHlvdSdyZSBtYWludGFpbmluZyBNQUNST1NTIGluIGEgbG9jYWwgZ2l0IG9yIAogbmV0d29yayBzaGFyZS4gQW5kIExpbmUgMyBpcyBmb3IgeW91ciBzY3JpcHQncyBtYWNyb3NzIGNsYXNzIGF0dHJpYnV0ZXMuIEZyb20gdGhlIGV4YW1wbGUgYWJvdmUsIAogYmVnaW5uaW5nIHdpdGggZmllbGQgMToiCiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnCiAgICB1c2VyIC0gdGhpcyBpcyB0aGUgTE9XRVNUIGxldmVsIG9mIHByaXZpbGVnZSB5b3VyIHNjcmlwdCByZXF1aXJlcyAodXNlciB2cy4gYWRtaW4sIGV0Yy4pCiAgICBkZW1vIHNjcmlwdCAtIHRoaXMgaXMgdGhlIHR5cGUgb2YgZGF0YSB5b3VyIHNjcmlwdCBldmFsdWF0ZXMsIG9yIHRoZSB0YXNrKHMpIGl0IHBlcmZvcm1zCiAgICBwb3dlcnNoZWxsIC0gdGhlIGxhbmd1YWdlIHlvdXIgc2NyaXB0IGlzIHdyaXR0ZW4gaW4uIE1BQ1JPU1Mgc3VwcG9ydHMgcG93ZXJzaGVsbCB2NSBhbmQgcHl0aG9uIDMKICAgIEhpU3VyZkFkdmlzb3J5IC0gVGhlIGF1dGhvciBvZiB0aGUgc2NyaXB0CiAgICAwIC0gdGhlIG1heGltdW0gbnVtYmVyIG9mIHBhcmFtZXRlcnMvYXJncyB5b3VyIHNjcmlwdCBjYW4gYWNjZXB0IGZvciBldmFsdWF0aW9uCiAgICBub25lIC0gdGhlIGZvcm1hdCBvZiB0aGUgc2NyaXB0IHJlc3BvbnNlLCBpZiBhbnknCiAgICBXcml0ZS1Ib3N0IC1mIEdSRUVOICIKIEhpdCBFTlRFUiBhbmQgSSdsbCB1c2UgdGhlIGJ1aWx0LWluIE1BQ1JPU1MgZnVuY3Rpb24gJ1RMJyB0byBzaG93IHlvdSBIaWthcnUncyBhdHRyaWJ1dGVzIGFzIGEgCiBwb3dlcnNoZWxsIG9iamVjdC4i
JycKICAgIFdyaXRlLUhvc3QgLWYgWUVMTE9XICQoVEwgJ0hJS0FSVScpCiAgICBXcml0ZS1Ib3N0IC1mIEdSRUVOICIKIFRoZSBtYWNyb3NzIGNsYXNzIG9iamVjdHMgYWxsb3cgeW91IHRvIHdyaXRlIHlvdXIgYXV0b21hdGlvbnMgd2l0aCBjaGVja3MgdG8gc2VhcmNoIE1BQ1JPU1MgdG9vbHMKIGZvciB3YXlzIHRvIGVucmljaCB0aGUgZGF0YSB5b3UncmUgcHJvY2Vzc2luZywgd2hpY2ggY29tZXMgaW4gaGFuZHkgaWYgeW91IGhhdmUgbW9yZSB0aGFuIG9uZSB0b29sCiB0aGF0IGNhbiBwcm9jZXNzIHRoZSBzYW1lIGtpbmQgb2YgZGF0YS4gTUFDUk9TUyBoYXMgYSBmdW5jdGlvbiBjYWxsZWQgJ2F2YWlsYWJsZVR5cGVzJyB0aGF0IGxldHMKIHlvdSByZXRyaWV2ZSBhIGxpc3Qgb2YgdG9vbHMgdGhhdCBoYW5kbGUgc3BlY2lmaWMgZGF0YSB0eXBlcy4gVGhlbiB5b3VyIGF1dG9tYXRpb24gY2FuIGl0ZXJhdGl2ZWx5IAogc2VuZCBpdHMgcmVzdWx0cyB0byBvbmUgb3IgbW9yZSBvZiB0aGVtIGZvciBwcm9jZXNzaW5nLCBwcm92aWRlZCB0aGF0IHlvdSdyZSBjb25zaXN0ZW50IHdpdGggaG93IHlvdQogZGVmaW5lIHRoZSAudmFsdHlwZSBhdHRyaWJ1dGUuIEFsc28sICdhdmFpbGFibGVUeXBlcycgY2FuIHNlYXJjaCBmb3IgbWF0Y2hpbmcgKm9yKiBleGFjdCAudmFsdHlwZQogdmFsdWVzLgogCiBGb3IgZXhhbXBsZSxpZiB5b3UgaGF2ZSBhIHNjcmlwdCB0aGF0IHF1ZXJpZXMgdGhlIEFQSSBmb3IgYSBTRUlNIG9yIEVEUiBwbGF0Zm9ybSB0aGF0IHJldHVybnMgdXNlci0KIG5hbWVzIHdpdGhpbiBpdHMgcmVzcG9uc2VzLCB5b3UgY291bGQgaGF2ZSBNQUNST1NTIGF1dG9tYXRpY2FsbHkgc2VuZCB0aGUgdXNlciB2YWx1ZSB0byBhbnkgc2NyaXB0cwogdGhhdCBjYW4gcHVsbCBkYXRhIGZyb20gQUQ6IgogICAgV3JpdGUtSG9zdCAtZiBZRUxMT1cgJyAgIAogICAgJHNlbmRfdG8gPSBhdmFpbGFibGVUeXBlcyAiQWN0aXZlIERpcmVjdG9yeSIKICAgIGZvcmVhY2gtb2JqZWN0KCAkaSBpbiAkc2VuZF90byApewogICAgICAgIGNvbGxhYiAkaSAiTXlTY3JpcHROYW1lIgogICAgfScKICAgIFdyaXRlLUhvc3QgLWYgR1JFRU4gJwogQnV0IHRoaXMgaXMgZ2V0dGluZyBhIGxpdHRsZSBhaGVhZCBvZiBvdXJzZWx2ZXMuIEhpdCBFTlRFUiBmb3IgYSBkZW1vbnN0cmF0aW9uIG9mIGhvdyBNQUNST1NTIHRvb2xzCiB0YWxrIHRvIGVhY2ggb3RoZXIuJw==
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgZmlyc3QgdGhpbmcgd2UgbmVlZCB0byBkbyBpcyBkZXRlcm1pbmUgd2hhdCBvdXIgaW5kaWNhdG9yIChJT0MpIGlzLCBhbmQgc2V0IGl0IGFzIHRoZSAKIHZhbHVlIGZvciAkKCckJyArICdQUk9UT0NVTFRVUkUnKS4gRXZlcnkgTUFDUk9TUyB0b29sIHNob3VsZCBiZSBjb2RlZCB0byB3YXRjaCBmb3IgYW5kIGFjdCBvbiAKICQoJyQnICsgJ1BST1RPQ1VMVFVSRScpIGlmIGl0IGV4aXN0cy4KICAgIAogTGV0J3MgcHJldGVuZCB5b3UncmUgc3RhcnRpbmcgYSB0aHJlYXQtaHVudCwgYW5kIHlvdSB3YW50IHRvIGZvY3VzIG9uIGNoYW5nZXMgYmVpbmcgbWFkZSB0byBhIAogV2luZG93cyBkYXRhYmFzZSBzZXJ2ZXIuIE15IGV2ZW50IElEIHJlZmVyZW5jZSB0b29sIEdVQkFCQSBjYW4gdGVsbCB5b3Ugd2hhdCBhbiBJRCByZXByZXNlbnRzLCBvciAKIGdpdmUgeW91IHRoZSBJRCBiYXNlZCBvbiBrZXl3b3JkcyB5b3Ugc3VwcGx5LiAoSW5jaWRlbnRhbGx5LCBHVUJBQkEncyBsb29rdXAgdGFibGUgaXMgaW4gdGhlIAogcmVzb3VyY2VzIGZvbGRlciwgd2hpY2ggaGUgZGVjb2RlcyB1c2luZyAiIC1Ob05ld2xpbmU7CiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnZ2V0VGhpcyAkdmYxOV9NUE9EWyJ0YmwiXScgLU5vTmV3bGluZTsgV3JpdGUtSG9zdCAtZiBHUkVFTiAnKSc=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBBbnkgc2NyaXB0IHlvdSBkcm9wIGludG8gdGhlICdtb2R1bGVzJyBmb2xkZXIgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGluY2x1ZGVkIGluIHRoZSBNQUNST1NTIAogdG9vbHNldCBpZiB5b3UgaGF2ZSBkZWZpbmVkIGFsbCB0aGUgYXR0cmlidXRlcyBjb3JyZWN0bHkuIFdoYXQgaWYgaXQncyBhIHB5dGhvbiBzY3JpcHQ/IFdlbGwsIAogTUFDUk9TUyBjb250YWlucyBhIGN1c3RvbSBweXRob24gbGlicmFyeSBjYWxsZWQgbWNkZWZzLiBBbGwgaXQgcmVhbGx5IGRvZXMgaXMgcmVwbGljYXRlIHNvbWUgCiBvZiB0aGUgZnVuY3Rpb25zIGZyb20gdGhlIHV0aWxpdHkucHMxIGZpbGUsIGFuZCBwZXJmb3JtIHNvbWUgc3RhbmRhcmQgY29udmVyc2lvbnMgb2YgcG93ZXJzaGVsbCAKIHZhbHVlcyBpbnRvIHB5dGhvbiB2YWx1ZXMuIE1BQ1JPU1MgaGFuZGxlcyBzZW5kaW5nIGFsbCB0aGVzZSB2YWx1ZXMgb3ZlciB0byB5b3VyIHB5dGhvbiBzY3JpcHRzLgogCiBJJ2xsIGFzayB5b3UgdG8gc2VsZWN0IGEgZmlsZSBuZXh0LiBNYWtlIGl0IGFuIG9mZmljZSBkb2N1bWVudCwgcGRmLCBvciBhIHRleHQgZmlsZS4gV2UnbGwgCiBwcmV0ZW5kIGl0J3MgYSBwaGlzaGluZyBkb2N1bWVudCB5b3UndmUgZGlzY292ZXJlZC4gQWZ0ZXIgeW91IHNlbGVjdCBhIGZpbGUsIEknbGwgc2VuZCBpdCB0byAKIEVMSU5UUywgd2hlcmUgeW91IGNhbiBwZXJmb3JtIGtleXdvcmQgc2NhbnMuIFRoZW4gSSdsbCBmb3J3YXJkIGl0IHRvIHRoZSBvdGhlciBkZW1vIHNjcmlwdCwgCiBNSU5NQVksIGFuZCBzaGUnbGwgc2ltdWxhdGUgcGFyc2luZyBpdCwgYW5kIHRoZW4gc2VuZCB0aGUgZmlsZW5hbWUgYmFjayB0byBNQUNST1NTIHdoZXJlIG15IAogZmlsZXNlYXJjaCB0b29sLCAkSywgd2lsbCB0cnkgdG8gZmluZCBvdGhlciBjb3BpZXMgb2YgaXQgb24geW91ciBob3N0IG9yIG5ldHdvcmsuCiAKIEhpdCBFTlRFUiB0byBzZWxlY3QgYSBmaWxlOiI=
JGR5cmxfaGlrX2xpc3QgPSBAKCRkeXJsX2hpa19maWxlKQogICAgICAgICRHbG9iYWw6UFJPVE9DVUxUVVJFID0gJGR5cmxfaGlrX2xpc3QKICAgICAgICBjb2xsYWIgJ0VMSU5UUy5wczEnICdISUtBUlUnCiAgICAgICAgc3BsYXNoUGFnZQogICAgICAgIHcgIiAgICAgICAgQW5kIG5vdyBJJ2xsIGZvcndhcmQgeW91ciBmaWxlbmFtZSB0byBNSU5NQVkuLi4iICdnJwogICAgICAgIHNscCAyCiAgICAgICAgJEdsb2JhbDpQUk9UT0NVTFRVUkUgPSAkZHlybF9oaWtfZmlsZQogICAgICAgIGNvbGxhYiAnTUlOTUFZLnB5JyAnSElLQVJVJwogICAgICAgIFdyaXRlLUhvc3QgLWYgR1JFRU4gIgogV2VsY29tZSBiYWNrIHRvIEhJS0FSVSEgU29tZXRoaW5nIHRvIGtlZXAgaW4gbWluZCBpcyB0aGF0IG1vc3Qgb2YgdGhlIGdsb2JhbCB2YXJpYWJsZXMgYW5kIGFueSB2YXJpYWJsZXMKIHdpdGggbmFtZXMgYmVnaW5uaW5nICckKCckJyArICdkeXJsXycpJyBnZXQgY2xlYXJlZCBldmVyeSB0aW1lIGEgc2NyaXB0IGV4aXRzIGJhY2sgdG8gdGhlIG1haW4gTUFDUk9TUyBtZW51IHRvCiBlbnN1cmUgdGhhdCBzY3JpcHRzIGFsd2F5cyBzdGFydCBhdCB6ZXJvIGFuZCBmdW5jdGlvbiBhcyBleHBlY3RlZC4gQnV0ICQoJyQnICsgJ1BST1RPQ1VMVFVSRScpIGRvZXMgTk9UIGdldCBjbGVhcmVkCiB1bnRpbCB5b3UgZG8gaXQgbWFudWFsbHkgZnJvbSB0aGUgbWVudS4gVGhpcyB3YXkgeW91IGNhbiBjb250aW51ZSBpbnZlc3RpZ2F0aW5nIGl0IGlmIG5lY2Vzc2FyeSAoYW5kIAogTUFDUk9TUyAgbm90aWZpZXMgeW91IHdoZW4gaXQgc3RpbGwgY29udGFpbnMgYSB2YWx1ZS4pIg==
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBPa2F5LCBubyBwcm9ibGVtLiBJJ2xsIGp1c3QgZXhwbGFpbiBpdC4gQWZ0ZXIgc2V0dGluZyAkKCckJyArICdQUk9UT0NVTFRVUkUnKSwgdGhlICdjb2xsYWInIGZ1bmN0aW9uIGlzIHVzZWQKIHRvIGNhbGwgdGhlIG5leHQgc2NyaXB0IGluIHlvdXIgd29ya2Zsb3cuIEVpdGhlciB5b3UgYWxyZWFkeSBoYXZlIG9uZSBpbiBtaW5kIChpbiB0aGlzIGNhc2UsICdNSU5NQVkucHknKSAKIG9yIHlvdSBzZWxlY3RlZCBvbmUgb3IgbW9yZSBzY3JpcHRzIHZpYSB0aGUgJ2F2YWlsYWJsZVR5cGVzJyBmdW5jdGlvbi4iCiAgICBXcml0ZS1Ib3N0IC1mIFlFTExPVyAnCiAgICAgICAgJHByb2Nlc3NlZF9JT0MgPSBjb2xsYWIgIk1JTk1BWS5weSIgIkhJS0FSVSInCiAgICBXcml0ZS1Ib3N0IC1mIEdSRUVOICIKIEFsbCB5b3UgaGF2ZSB0byBzdXBwbHkgaXMgdGhlIGZ1bGwgbmFtZSBvZiB0aGUgc2NyaXB0IHlvdSdyZSBjYWxsaW5nLCB0aGUgY29tbW9uIG5hbWUgb2YgeW91ciBzY3JpcHQgKG5vIAogZXh0ZW5zaW9uKSwgYW5kIGlmIGFwcGxpY2FibGUgeW91IGNhbiBzZW5kIGEgM3JkIHBhcmFtZXRlci4gJCgnJCcgKyAnUFJPVE9DVUxUVVJFJykgaXRzZWxmIHNob3VsZCBhdXRvLQogbWF0aWNhbGx5IGJlIHJlYWQgYnkgdGhlICBjYWxsZWQgc2NyaXB0LCBubyBuZWVkIHRvIHBhc3MgaXQgaW50byAnY29sbGFiJy4i
V3JpdGUtSG9zdCAtZiBDWUFOICIKIEhlcmUgYXJlIHRoZSBmaWxlcyBpbiB0aGUgXGNvcmUgZm9sZGVyIHRoYXQgY29udGFpbiBhbGwgb2YgTUFDUk9TUycgZnVuY3Rpb25zOiIKICAgIFdyaXRlLUhvc3QgJwogICAgLXV0aWxpdHkucHMxCiAgICAgICAgQW55IGZ1bmN0aW9ucyB0aGF0IGFkZCBjYXBhYmlsaXRpZXMgdG8geW91ciBhdXRvbWF0aW9ucyBhcmUgaW4gdGhpcyBmaWxlLiBGb3IgZXhhbXBsZSwKICAgICAgICB0aGUgImdldFRoaXMiIGZ1bmN0aW9uIGNhbiBwZXJmb3JtIEJhc2U2NCBhbmQgaGV4YWRlY2ltYWwgZGVjb2RpbmcsIHRoZSAiZ2V0RmlsZSIKICAgICAgICBmdW5jdGlvbiBjYW4gb3BlbiBkaWFsb2cgd2luZG93cyBmb3IgeW91ciBzY3JpcHRzIHRvIGxldCB1c2VycyBzZWxlY3QgZmlsZXMvZm9sZGVycywKICAgICAgICBhbmQgdGhlICJzaGVldHoiIGZ1bmN0aW9uIGNhbiB3cml0ZSB5b3VyIG91dHB1dHMgdG8gYW4gZXhjZWwgc3ByZWFkc2hlZXQuIE1ha2UKICAgICAgICBzdXJlIHRvIGZhbWlsaWFyaXplIHlvdXJzZWxmIHdpdGggYWxsIHRoZSBmdW5jdGlvbnMgaW4gaGVyZSEKCiAgICAtZGlzcGxheS5wczEKICAgICAgICBUaGUgZnVuY3Rpb25zIGluIHRoaXMgZmlsZSBjb250cm9sIGhvdyB0aGluZ3MgZ2V0IGRpc3BsYXllZCBvbiBzY3JlZW4uIFRoZSAic2NyZWVuUmVzdWx0cyIsCiAgICAgICAgInciIGFuZCAic2NyZWVuUmVzdWx0c0FsdCIgZnVuY3Rpb25zIGNhbiByZWNlaXZlIGlucHV0cyBmcm9tIHlvdXIgc2NyaXB0cyBhbmQgZm9ybWF0IHRoZW0gaW4KICAgICAgICBkaWZmZXJlbnQgd2F5cyB0byBwcmV0dGlmeSB0aGVtIGluIHRoZSBwb3dlcnNoZWxsIHdpbmRvdy4KCiAgICAtdXBkYXRlcy5wczEKICAgICAgICBUaGVzZSBmdW5jdGlvbnMgc2V0IHRoZSBhdHRyaWJ1dGVzIGZvciBhbGwgc2NyaXB0cyBpbiB0aGUgIm1vZHVsZXMiIGZvbGRlci4gSW4gYWRkaXRpb24sIGlmCiAgICAgICAgeW91IGFyZSBtYWludGFpbmluZyB5b3VyIGF1dG9tYXRpb25zIGluIGEgY2VudHJhbCByZXBvc2l0b3J5IGxpa2UgZ2l0bGFiIG9yIGEgZmlsZXNoYXJlLCB0aGV5CiAgICAgICAgYWxsb3cgTUFDUk9TUyB0byBsb29rIGZvciBuZXcgb3IgdXBkYXRlZCBzY3JpcHRzIGFuZCBhdXRvbWF0aWNhbGx5IGRvd25sb2FkIHRoZW0uCgogICAgLXZhbGlkYXRpb24ucHMxCiAgICAgICAgVGhpcyBmaWxlIGNvbnRhaW5zIGZ1bmN0aW9ucyBzcGVjaWZpYyB0byBtYWtpbmcgc3VyZSBzY3JpcHRzIGNob3NlbiBieSB0aGUgdXNlciBhcmUgCiAgICAgICAgYXZhaWxhYmxlLCBhbmQgKGlmIGNvbmZpZ3VyZWQpIHRoYXQgb25seSB2YWxpZCB1c2VycyBjYW4gdXNlIGNlcnRhaW4gc2NyaXB0cy4gSXQgYWxzbwogICAgICAgIGNvbnRhaW5zIG9uZSBvZiB0aGUgcHJpbWFyeSByZWFzb25zIGZvciBNQUNST1NTLCB0aGUgImNvbGxhYiIgZnVuY3Rpb24sIHdoaWNoIHBhc3NlcwogICAgICAgIHZhbHVlcyBmcm9tIG9uZSBzY3JpcHQgdG8gYW5vdGhlciBhbmQgYmFjay4KCiAgICAtc3BsYXNoZXMucHMxCiAgICAgICAgVGhlIGZ1bmN0aW9uICJ0cmFuc2l0aW9uU3BsYXNoIiBjYW4gYmUgY2FsbGVkIHRvIGJyaWVmbHkgZGlzcGxheSBzb21lIE1hY3Jvc3MtcmVsYXRlZAogICAgICAgIEFTQ0lJIGFydC4gWW91IGNhbiBhZGQgeW91ciBvd24gYXJ0IGhlcmUgYXMgd2VsbC4KCiAgICAtY2xhc3Nlcy5wczEKICAgICAgICBUaGUgY3VzdG9tICJtYWNyb3NzIiBwb3dlcnNoZWxsIGNsYXNzIGlzIGhlcmUuIEFkZCB5b3VyIG93biBjdXN0b20gY2xhc3NlcyBhcyBuZWVkZWQsIGFuZAogICAgICAgIE1BQ1JPU1Mgd2lsbCBsb2FkIHRoZW0gYXV0b21hdGljYWxseSBhdCBzdGFydHVwLgoKICAgIC1weV9jbGFzc2VzXG1jZGVmcy5weQogICAgICAgIFRoaXMgaXMgYSBnZW5lcmljIHB5dGhvbiBsaWJyYXJ5IHRoYXQgY29udmVydHMgZnVuY3Rpb25hbGl0eSBpbiAidXRpbGl0eS5wczEiIGludG8KICAgICAgICBweXRob24uIEl0IGNhbiBzb21ldGltZXMgaGVscCB3aXRoIG1pbmltaXppbmcgaW1wb3J0cyBpbiB5b3VyIHB5dGhvbiBzY3JpcHRzIGJ5IGp1c3QKICAgICAgICBpbXBvcnRpbmcgdGhpcyBsaWJyYXJ5Lic=
V3JpdGUtSG9zdCAtZiBHUkVFTiAiCiBUaGUgb25seSBvdGhlciB0aGluZyB0byBtZW50aW9uIGFib3V0IGNvbmZpZ3VyYXRpb24gaXMgdGhhdCB3aXRoaW4gdGhlIGNvcmVcdmFsaWRhdGlvbi5wczEgZmlsZSwKIHRoZXJlIGlzIGEgZnVuY3Rpb24gY2FsbGVkICdzZXRVc2VyJy4gSXQgaWRlbnRpZmllcyB0aGUgdXNlciB3aG8gaXMgY3VycmVudGx5IGxhdW5jaGluZyBNQUNST1NTLAogYW5kIHNldHMgdGhlaXIgZGVza3RvcCBhcyAkKCckJysndmYxOV9ERUZBVUxUUEFUSCcpLiBUaGlzIHBhdGggaXMgbWVhbnQgdG8gYmUgdXNlZCBieSBNQUNST1NTIHRvb2xzIHRvCiB3cml0ZSBvdXRwdXRzIHRvLgogCiBUaGlzIGZ1bmN0aW9uIGNhbiBhbHNvIGJlIHVzZWQgdG8gaW1wbGVtZW50IGEgdmVyeSBiYXNpYyBmb3JtIG9mIGFjY2VzcyBjb250cm9sLiBJdCdzIG5vdCBzdXBlciBncmVhdCwKIGJ1dCBpbiBhbiBBY3RpdmUgRGlyZWN0b3J5IGVudmlyb21lbnQgaXQgY2FuIGhlbHAgcHJldmVudCBNQUNST1NTIHVzZSBvdXRzaWRlIG9mIHlvdXIgU09DLiBNYWtlIHN1cmUKIHRvIHJlYWQgdGhlIGRvY3VtZW50YXRpb24gaW4gdGhhdCBmaWxlIHRvIHNlZSBpZiB5b3Ugd2FudCB0byBib3RoZXIgd2l0aCBpdC4KIAogWW91IGNhbiB1c2UgYW4gdW5saXN0ZWQgb3B0aW9uIGluIHRoZSBtYWluIG1lbnUsIiAtTm9OZXdsaW5lOwogICAgV3JpdGUtSG9zdCAtZiBZRUxMT1cgJyAiaGVscCBkZXYiLCcgLU5vTmV3bGluZQogICAgV3JpdGUtSG9zdCAtZiBHUkVFTiAnIHdoaWNoIHdpbGwgc2hvdyB5b3UgYWxsIG9mIHRoZSBmdW5jdGlvbnMKIGF2YWlsYWJsZSBhbmQgdGhlaXIgdXNhZ2UuIElmIHlvdSB3YW50IHRvIHRlc3QgYW55IG9mIHRoZXNlLCBqdXN0IHJ1biB0aGVtIHdpdGggdGhlIGRlYnVnIGNvbW1hbmQ6JwogICAgV3JpdGUtSG9zdCAtZiBZRUxMT1cgJwogICAgZGVidWcgPGZ1bmN0aW9uIG5hbWU+IDxwYXJhbWV0ZXJzPicKICAgIFdyaXRlLUhvc3QgLWYgR1JFRU4gJwogVGhhbmtzIGZvciB0YWtpbmcgTUFDUk9TUyBmb3IgYSBzcGluLCBJIGhvcGUgeW91IGZpbmQgaXQgdXNlZnVsISBIaXQgRU5URVIgdG8gZXhpdCB0aGlzIGRlbW8uJw==
