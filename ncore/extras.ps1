## MACROSS added functionalities
## Do not modify or delete the checks below!
<#  Add your own encoded defaults below here (see the readme!)
tblJFBTU2NyaXB0Um9vdFxyZXNvdXJjZXM=@@@exaaHR0cDovL3lv
dXIud2ViLmZpbGUvZXhhbXBsZS50eHQ=@@@nreaHR0cDovLzE5Mi4xNjguMTAwLjEwL3JlcG8v
#>

## Pause the console so user can run their own commands
function runSomething(){
    cls
    Write-Host "
    "
    Write-Host -f GREEN "  Pausing MACROSS: type " -NoNewline;
        Write-Host -f YELLOW "exit" -NoNewline;
            Write-Host -f GREEN " to close your session and return to"
    Write-Host -f GREEN "  the tools menu.
    "

    powershell.exe

    Return
}

## Simple deobfuscation for investigating events
function decodeSomething($1){
    cls
    if($1 -eq 1){
        Write-Host -f GREEN "
        Enter a plaintext string you want to ENCODE to Base64:
        
        > " -NoNewline;
        $Z = Read-Host
        getThis $Z 0
    }
    else{
        Write-Host -f GREEN "
        Enter a string beginning with '0x' if decoding a hexadecimal value, otherwise
        enter a Base64 string to decode:

        > " -NoNewline; $Z = Read-Host

        if( $Z -Match "^0x" ){
            $Z = $Z -replace "^0x",''
            getThis $Z 1
        }
        else{
            getThis $Z
        }
    }

    Write-Host -f YELLOW "
    $vf19_READ
    "

    Write-Host -f GREEN '
    Decode another? ' -NoNewline; $Z = Read-Host
    if( $Z -Match "^y" ){
        plainTexter
    }
}

## Run this to get a quick version check of a tool
## $1 is the name of the script w/o the extension
function disVer($1){
    $Global:VER = Get-Content "$vf19_TOOLSROOT\nmods\$1.ps1" | Select -Index 1
    $Global:VER = $VER -replace "^#_ver ",''
}


<## Delete stale reports generated by various tools
  $1 = the calling tool's filepath to reports, $2 is the tool name that generated the reports.
  Be kind! Design your scripts to write reports to a specific directory, so
  when calling this function you aren't offering users the option to mistakenly
  wipe out their desktop or documents folders...#>
function houseKeeping($1,$2){
    $reports = $1
    function listFiles(){
        $Script:fpath = (Get-ChildItem -Path "$reports")
        $Script:a = @()
        $b = 0
        Write-Host -f YELLOW "       EXISTING $2 REPORTS
    
        "
        $fpath | ForEach-Object{  ## Create a list of the filenames to display onscreen
            $b++
            $n = $_.Name
            $m = $_.LastWriteTime
            $Script:a += $n
            Write-Host "   $b. $n" -NoNewline;  ## display the filename and its last modified time
            Write-Host ":  $m"
        }
        Write-Host '
        '
        Write-Host -f GREEN "  Select a file to delete, 'a' to delete all of them,  "
        Write-Host -f GREEN "  or 's' to skip:  " -NoNewline;
    }
    function rmFiles($del){
        Remove-Item -Path "$reports\$del"
    }
    
    Write-Host ''
    while( $Z -notMatch "^[0-9]+$" ){
        listFiles
        $Z = Read-Host
        Write-Host ''
        if( $Z -eq 's' ){    ##  Setting to 9999 skips the final task of selecting files to delete
            $Z = 9999
        }
        elseif( $Z -eq 'a' ){  ## Delete all files in the provided directory if user selects 'a'
            $Z = 9999
            $fpath |
                Foreach-Object{
                    $dn = $_.Name
                    Write-Host -f CYAN "  Deleting $dn...."
                    rmFiles $dn
                    start-sleep 1
                }
        }
    
     
        if($Z -ne 9999){
            $Z = $Z - 1
            $fpath |
                Foreach-Object{
                    if($a[$Z] -eq $_.Name){
                        $dn = $_.Name
                        Write-Host -f CYAN "  Deleting $dn...."
                        rmFiles $dn
                        start-sleep 1 
                    }
            }
            Write-Host -f GREEN '
            Delete another? (y/n) ' -NoNewline;
            $Z = Read-Host
            if($Z -eq 'y'){
                Remove-Variable Z
            }
            else{
                $Z = 9999
            }
        }
    }

    Write-Host ''
    ss 1

    Remove-Variable -Force fpath,a
}
